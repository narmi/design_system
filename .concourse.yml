resource_types:
  - name: pull-request
    type: registry-image
    source:
      repository: jtarchie/pr
  - name: slack-notification
    type: registry-image
    source:
      repository: cfcommunity/slack-notification-resource
      tag: latest
  - name: s3-sync
    type: registry-image
    source:
      # Use a form of 18fgsa/s3-resource-simple that provides additional features
      repository: phillbaker/s3-resource-simple
      tag: params

resources:
  - name: designsystem-pr
    type: pull-request
    source:
      access_token: {{github_access_token}}
      private_key: {{github_designsystem_private_key}}
      repo: narmi/design_system
      uri: git@github.com:narmi/design_system.git

  - name: banking-master-image
    type: docker-image
    source:
      repository: 848180528913.dkr.ecr.us-east-1.amazonaws.com:443/banking
      aws_access_key_id: {{aws_access_key}}
      aws_secret_access_key: {{aws_secret_key}}
      max_concurrent_downloads: 3

task_publish_storybook: &task_publish_storybook
  path: bash
  args:
    - -xc
    - |
      cd design_system

      # must live in in design_system/ folder
      # only commits on HEAD of master
      RELEVANT_FILES=`git show --pretty='format:' --name-only | sort | uniq`
      if [ -z "$RELEVANT_FILES" ]; then
        echo "\n*******************************************************"
        echo "No Storybook updates found! Exiting 0"
        echo "\n*******************************************************"
        exit 0
      fi

      set -e # set exit on error after short circuit check above
      # publish to Chromatic, depends on CHROMATIC_PROJECT_TOKEN being set in task
      npm ci --loglevel=warn
      echo '{"body": "' > request
      echo "Storybook published for your PR! For design QA:\n\n" >> request
      npm run publish-storybook > published
      cat published | grep -i "View build details at" | grep "â†’" | sed 's/   //g' | sed 's/build details at/changed components here/' >> request
      echo "\n" >> request
      cat published | grep -i "View complete Storybook at" | sed 's/   //g' >> request
      echo "\n" >> request
      echo '"}' >> request
      cat request
      set +x
      # comment the Storybook URL on the PR
      if [ "${PR}" == "true" ]; then
        PR_ID=$(git config --get pullrequest.id)
        curl -s -H "Authorization: token ${GITHUB_ACCESS_TOKEN}" \
          -X POST -d @request \
          "https://api.github.com/repos/narmi/design_system/issues/${PR_ID}/comments"
      fi

test_design_system: &test_design_system
  path: bash
  args:
    - -xce
    - |
      cd design_system
      npm ci --loglevel=warn
      npm run test

jobs:
  - name: pr-storybook
    max_in_flight: 5
    build_logs_to_retain: 1000
    plan:
      - get: designsystem-pr
        params:
          depth: 1
        trigger: true
      - get: banking-master-image
        params:
          save: true
      - task: publish-storybook
        timeout: 30m
        image: banking-master-image
        config:
          platform: linux
          params:
            AWS_ACCESS_KEY_ID: {{aws_access_key_narmicom_docs}}
            AWS_SECRET_ACCESS_KEY: {{aws_secret_key_narmicom_docs}}
            AWS_DEFAULT_REGION: us-east-1
            CHROMATIC_PROJECT_TOKEN: {{storybook_chromatic_project_token}}
            PR: true
            GITHUB_ACCESS_TOKEN: {{github_access_token}}
          inputs:
            - name: designsystem-pr
              path: design_system
            - name: banking-master-image
          run: *task_publish_storybook

  - name: pr-run-tests
    max_in_flight: 5
    build_logs_to_retain: 1000
    plan:
      - aggregate:
        - get: designsystem-pr
          params:
            depth: 1
          trigger: true
          version: every
        - get: banking-master-image
      - put: designsystem-pr
        params:
          path: designsystem-pr
          status: pending
          context: design-system-tests
      - task: test
        timeout: 20m
        image: banking-master-image
        config:
          platform: linux
          caches:
            - path: "$HOME/.npm"
          inputs:
            - name: designsystem-pr
              path: design_system
          run: *test_design_system
        on_success:
          put: designsystem-pr
          params:
            path: designsystem-pr
            status: success
            context: design-system-tests
        on_failure:
          put: designsystem-pr
          params:
            path: designsystem-pr
            status: failure
            context: design-system-tests
