# Chromatic visual tests to run on PRs targeting `main`
name: 'Chromatic PR Checks'
permissions:
  contents: read
  pull-requests: write
on:
  pull_request:
    branches:
      - main

jobs:
  check_changes:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout PR
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          fetch-depth: 0

      - name: Check for relevant changes
        id: changes
        run: |
          # Get the base branch (main) and check for changes in src/ and tokens/
          git fetch origin main:main
          if git diff --name-only main...HEAD | grep -E '^(src/|tokens/)'; then
            echo "has_changes=true" >> $GITHUB_OUTPUT
            echo "Found relevant changes in src/ or tokens/"
          else
            echo "has_changes=false" >> $GITHUB_OUTPUT
            echo "No relevant changes found in src/ or tokens/"
          fi

      - name: Save artifact
        uses: actions/upload-artifact@v2
        with:
          name: pr-check-results
          path: $GITHUB_OUTPUT

# Privileged workflow will be added separately

  post_chromatic_comment:
    name: Post Chromatic Comment
    runs-on: ubuntu-latest
    needs: [check_changes, run_chromatic]
    if: needs.check_changes.outputs.has_relevant_changes == 'true'
    steps:
      - name: Log run_chromatic job outputs
        run: echo "${{ toJson(needs.run_chromatic.outputs) }}"

      - name: Comment Storybook URL and diff status in PR
        uses: thollander/actions-comment-pull-request@24bffb9b452ba05a4f3f77933840a6a841d1b32b # 3.0.1
        with:
          pr_number: ${{ github.event.pull_request.number }}
          mode: recreate
          comment_tag: chromatic-results
          message: |
            ${{ needs.run_chromatic.outputs.changeCount > '0' && format('## ðŸš¨ Found {0} visual changes that require your attention!', needs.run_chromatic.outputs.changeCount) || '' }}
            ${{ needs.run_chromatic.outputs.changeCount <= '0' && format('## âœ… No visual changes detected') || ''}}
            ${{ format('[View Chromatic Build]({0})', needs.run_chromatic.outputs.buildUrl || needs.run_chromatic.outputs.chromatic_url) || '' }}

            ## ðŸ“˜ Storybook preview
            [View Storybook preview](<${{ needs.run_chromatic.outputs.storybookUrl }}>)

            ---
            <sub>This PR is posted and updated automatically by the `Chromatic` action</sub>

  chromatic_status:
    name: Chromatic Status
    runs-on: ubuntu-latest
    needs: [check_changes, run_chromatic]
    if: always()
    steps:
      - name: Set status based on changes
        run: |
          if [ "${{ needs.check_changes.outputs.has_relevant_changes }}" = "true" ]; then
            if [ "${{ needs.run_chromatic.result }}" = "success" ]; then
              echo "Chromatic checks passed"
              exit 0
            else
              echo "Chromatic checks failed"
              exit 1
            fi
          else
            echo "No relevant changes detected, skipping Chromatic checks"
            exit 0
          fi
