"use strict";(self.webpackChunk_narmi_design_system=self.webpackChunk_narmi_design_system||[]).push([[8841],{"./src/Combobox/index.stories.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{ClearingSelctionWithAction:()=>ClearingSelctionWithAction,CustomFiltering:()=>CustomFiltering,CustomSearchStrings:()=>CustomSearchStrings,FullyControlled:()=>FullyControlled,InADialog:()=>InADialog,NoChildren:()=>NoChildren,OverridingMenuHeight:()=>OverridingMenuHeight,Overview:()=>Overview,ScrollingBehavior:()=>ScrollingBehavior,WithActions:()=>WithActions,WithCategories:()=>WithCategories,WithCategoriesInForm:()=>WithCategoriesInForm,WithError:()=>WithError,WithHeadings:()=>WithHeadings,WithHintHeadings:()=>WithHintHeadings,WithIcon:()=>WithIcon,__namedExportsOrder:()=>__namedExportsOrder,default:()=>index_stories});var react=__webpack_require__("./node_modules/react/index.js"),Combobox=__webpack_require__("./src/Combobox/index.js"),ComboboxItem=__webpack_require__("./src/Combobox/ComboboxItem.js"),ComboboxHeading=__webpack_require__("./src/Combobox/ComboboxHeading.js"),Row=__webpack_require__("./src/Row/index.tsx"),Dialog=__webpack_require__("./src/Dialog/index.tsx"),Drawer=__webpack_require__("./src/Drawer/index.js");function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}const Template=args=>react.createElement(Combobox.Ay,args),children=["Alabama","Alaska","Arizona","Arkansas","California","Colorado","Connecticut","Delaware","Florida","Georgia","Hawaii","Idaho","Illinois","Indiana","Iowa","Kansas","Kentucky","Louisiana","Maine","Maryland","Massachusetts","Michigan","Minnesota","Mississippi","Missouri","Montana","Nebraska","Nevada","New Hampshire","New Jersey","New Mexico","New York","North Carolina","North Dakota","Ohio","Oklahoma","Oregon","Pennsylvania","Rhode Island","South Carolina","South Dakota","Tennessee","Texas","Utah","Vermont","Virginia","Washington","West Virginia","Wisconsin","Wyoming"].map((state=>react.createElement(Combobox.Ay.Item,{value:state},state))),Overview=Template.bind({});Overview.args={label:"Select your state",children};const WithIcon=Template.bind({});WithIcon.args={label:"Select your state",icon:"search",children};const CustomSearchStrings=args=>react.createElement(Combobox.Ay,_extends({label:'Favorite Emoji (e.g. "Cactus")'},args),react.createElement(Combobox.Ay.Item,{value:"🐪",searchValue:"Camel"}),react.createElement(Combobox.Ay.Item,{value:"📷",searchValue:"Camera"}),react.createElement(Combobox.Ay.Item,{value:"🌵",searchValue:"Cactus"}),react.createElement(Combobox.Ay.Item,{value:"🚬",searchValue:"Cigarette"}),react.createElement(Combobox.Ay.Item,{value:"⭕️",searchValue:"Circle Mark"}),react.createElement(Combobox.Ay.Item,{value:"🥒",searchValue:"Cucumber"}),react.createElement(Combobox.Ay.Item,{value:"🇨🇺",searchValue:"Cuban Flag"}),react.createElement(Combobox.Ay.Item,{value:"🥌",searchValue:"Curling Stone"}),react.createElement(Combobox.Ay.Item,{value:"🐓",searchValue:"Chicken"}),react.createElement(Combobox.Ay.Item,{value:"🎊",searchValue:"Confetti Ball"}),react.createElement(Combobox.Ay.Item,{value:"🧥",searchValue:"Coat"}),react.createElement(Combobox.Ay.Item,{value:"🧁",searchValue:"Cupcake"}));CustomSearchStrings.parameters={docs:{description:{story:"By default typeahead is based on `value`. You may use `searchValue` to explicitly set the string the typeahead should match against."}}};const WithHeadings=args=>react.createElement(Combobox.Ay,_extends({label:"Select Account"},args),react.createElement(Combobox.Ay.Heading,{text:"Checking"}),react.createElement(Combobox.Ay.Item,{value:"Primary Checking - 4567"}),react.createElement(Combobox.Ay.Item,{value:"Secondary Checking - 9876"}),react.createElement(Combobox.Ay.Heading,{text:"Savings"}),react.createElement(Combobox.Ay.Item,{value:"Primary Savings - 1234"}),react.createElement(Combobox.Ay.Item,{value:"Cheese Fund - 5432"})),WithHintHeadings=args=>react.createElement(Combobox.Ay,_extends({label:"Select Account"},args),react.createElement(Combobox.Ay.Heading,{text:"Checking",kind:"hint"}),react.createElement(Combobox.Ay.Item,{value:"Primary Checking - 4567"}),react.createElement(Combobox.Ay.Item,{value:"Secondary Checking - 9876"}),react.createElement(Combobox.Ay.Heading,{text:"Savings",kind:"hint"}),react.createElement(Combobox.Ay.Item,{value:"Primary Savings - 1234"}),react.createElement(Combobox.Ay.Item,{value:"Cheese Fund - 5432"})),WithError=Template.bind({});WithError.args={label:"Select your state",errorText:"Can not be blank",children};const NoChildren=Template.bind({});NoChildren.args={label:"State",children:null},NoChildren.parameters={docs:{description:{story:"If no children are passed, the `Combobox` will render a plain input"}}};const FullyControlled=()=>{const[inputValue,setInputValue]=(0,react.useState)(""),[allItems,setAllItems]=(0,react.useState)(["Primary Checking - 4567","Secondary Checking - 9876","Primary Savings - 1234","Cheese Fund - 5432"]);return react.createElement("div",null,react.createElement(Combobox.Ay,{label:"Select Account",inputValue,onInputChange:val=>setInputValue(val)},allItems.map(((item,i)=>react.createElement(Combobox.Ay.Item,{key:`${i}-${item}`,value:item})))),react.createElement("div",{className:"margin--top"},react.createElement(Row.A,null,react.createElement(Row.A.Item,{shrink:!0},react.createElement("button",{className:"margin--top",onClick:()=>{setInputValue("")}},"Clear input value")),react.createElement(Row.A.Item,{shrink:!0},react.createElement("button",{className:"margin--top",onClick:()=>{setAllItems((items=>["Extra Item!",...items]))}},"Add an item to the top of the list")))))};FullyControlled.parameters={docs:{description:{story:"To fully control the value input, use `inputValue` and `onInputChange`."}}};const InADialog=()=>{const[isOpen,setIsOpen]=(0,react.useState)(!1);return react.createElement(react.Fragment,null,react.createElement("button",{onClick:()=>{setIsOpen(!0)}},"Open dialog"),react.createElement(Dialog.A,{title:"Dialog with a Combobox",isOpen,onUserDismiss:()=>setIsOpen(!1)},react.createElement(Combobox.Ay,{label:"Select Account"},react.createElement(Combobox.Ay.Heading,{text:"Checking"}),react.createElement(Combobox.Ay.Item,{value:"Primary Checking - 4567"}),react.createElement(Combobox.Ay.Item,{value:"Secondary Checking - 9876"}),react.createElement(Combobox.Ay.Item,{value:"Other Checking - 1112"}),react.createElement(Combobox.Ay.Item,{value:"Wow, more Checking - 3112"}),react.createElement(Combobox.Ay.Heading,{text:"Savings"}),react.createElement(Combobox.Ay.Item,{value:"Primary Savings - 1234"}),react.createElement(Combobox.Ay.Item,{value:"Cheese Fund - 5432"}))))},WithCategories=Template.bind({});WithCategories.args={id:"withCategories",label:"Transfer to",children:[react.createElement(Combobox.Ay.Category,{label:"Checking"},react.createElement(Combobox.Ay.Item,{searchValue:"Business Checking",value:"checking1"},"Business Checking - 11234"),react.createElement(Combobox.Ay.Item,{searchValue:"Main Checking",value:"checking2"},"Main Checking - 13989"),react.createElement(Combobox.Ay.Item,{searchValue:"Joint Checking",value:"checking3"},"Joint Checking - 14857")),react.createElement(Combobox.Ay.Category,{label:"Savings"},react.createElement(Combobox.Ay.Item,{searchValue:"Business Checking",value:"savings1"},"Business Savings - 13938"),react.createElement(Combobox.Ay.Item,{searchValue:"Main Savings",value:"savings2"},"Main Savings - 48274"),react.createElement(Combobox.Ay.Item,{searchValue:"Joint Savings",value:"savings3"},"Joint Savings - 48284")),react.createElement(Combobox.Ay.Category,{label:"External Accounts"},react.createElement(Combobox.Ay.Item,{value:"Sasha"},"Sasha - 84839"),react.createElement(Combobox.Ay.Item,{value:"Joan"},"Joan - 36183"),react.createElement(Combobox.Ay.Item,{value:"Benoit"},"Benoit - 53261"))]},WithCategories.parameters={docs:{description:{story:"You may group `Combobox.Item` elements by category with `Combobox.Category`. When using categories, you **must** make all direct children of `Combobox` a `Combobox.Category`; no orphan items are allowed when using categories."}}};const CustomFiltering=Template.bind({});CustomFiltering.args={id:"customFiltering",label:"Transfer to",children:[react.createElement(Combobox.Ay.Item,{searchValue:"Main Checking - 67289",value:"checking2"},"Main Checking - 67289"),react.createElement(Combobox.Ay.Item,{searchValue:"Joint Checking - 14857",value:"checking3"},"Joint Checking - 14857"),react.createElement(Combobox.Ay.Item,{searchValue:"Business Checking - 11234",value:"checking1"},"Business Checking - 11234"),react.createElement(Combobox.Ay.Item,{searchValue:"Business Savings - 62947",value:"savings1"},"Business Savings - 62947")],filterItemsByInput:(items,inputVal)=>items.filter((item=>(item.props.searchValue||item.props.value).toLowerCase().includes(inputVal)))},CustomFiltering.parameters={docs:{description:{story:"In this example, a custom `filterItemsByInput` function is used to enable search by either account name OR first four."}}};const WithActions=()=>{const[isOpen,setIsOpen]=(0,react.useState)(!1),[inputValue,setInputValue]=(0,react.useState)("");return react.createElement(react.Fragment,null,react.createElement(Combobox.Ay,{label:"Select Account",inputValue,onInputChange:val=>setInputValue(val)},react.createElement(Combobox.Ay.Item,{value:"Primary Checking - 4567"}),react.createElement(Combobox.Ay.Item,{value:"Cheese Fund - 5432"}),react.createElement(Combobox.Ay.Item,{value:"Primary Savings - 1234"}),react.createElement(Combobox.Ay.Item,{value:"Secondary Checking - 7892"}),react.createElement(Combobox.Ay.Action,{onSelect:()=>{setIsOpen(!0)},label:"Do Action"})),react.createElement(Drawer.A,{isOpen,onUserDismiss:()=>setIsOpen(!1)},react.createElement("div",{className:"padding--y--s"},"🎬 Action!")))},ScrollingBehavior=()=>react.createElement("main",{style:{height:"200vh"}},react.createElement("div",{className:"margin--bottom",style:{marginTop:"100vh"}}),react.createElement(Combobox.Ay,{label:"Account"},react.createElement(Combobox.Ay.Item,{value:"checking1234"},"Checking (1234)"),react.createElement(Combobox.Ay.Item,{value:"savings4321"},"Savings (4321)"),react.createElement(Combobox.Ay.Item,{value:"checking5678"},"Checking (5678)"),react.createElement(Combobox.Ay.Item,{value:"savings9876"},"Savings (9876)"),react.createElement(Combobox.Ay.Item,{value:"money_market2468"},"Money Market (2468)"),react.createElement(Combobox.Ay.Item,{value:"cd1357"},"Certificate of Deposit (1357)"),react.createElement(Combobox.Ay.Item,{value:"checking9999"},"Checking (9999)"),react.createElement(Combobox.Ay.Item,{value:"savings1111"},"Savings (1111)"),react.createElement(Combobox.Ay.Item,{value:"ira8642"},"IRA (8642)"),react.createElement(Combobox.Ay.Item,{value:"checking7531"},"Checking (7531)"),react.createElement(Combobox.Ay.Item,{value:"savings0246"},"Savings (0246)"),react.createElement(Combobox.Ay.Item,{value:"money_market8024"},"Money Market (8024)"),react.createElement(Combobox.Ay.Item,{value:"checking3698"},"Checking (3698)"),react.createElement(Combobox.Ay.Item,{value:"savings7410"},"Savings (7410)"),react.createElement(Combobox.Ay.Item,{value:"cd9630"},"Certificate of Deposit (9630)"),react.createElement(Combobox.Ay.Item,{value:"checking1593"},"Checking (1593)"),react.createElement(Combobox.Ay.Item,{value:"savings7529"},"Savings (7529)"),react.createElement(Combobox.Ay.Item,{value:"ira4816"},"IRA (4816)"),react.createElement(Combobox.Ay.Item,{value:"money_market3571"},"Money Market (3571)"),react.createElement(Combobox.Ay.Item,{value:"checking8642"},"Checking (8642)"))),ClearingSelctionWithAction=()=>{const[isOpen,setIsOpen]=(0,react.useState)(!1),[inputValue,setInputValue]=(0,react.useState)("");return react.createElement(react.Fragment,null,react.createElement(Combobox.Ay,{label:"Select Account",inputValue,onInputChange:val=>setInputValue(val),clearSelectionOnAction:!0},react.createElement(Combobox.Ay.Item,{value:"Primary Checking - 4567"}),react.createElement(Combobox.Ay.Item,{value:"Cheese Fund - 5432"}),react.createElement(Combobox.Ay.Item,{value:"Primary Savings - 1234"}),react.createElement(Combobox.Ay.Item,{value:"Secondary Checking - 7892"}),react.createElement(Combobox.Ay.Action,{onSelect:()=>{setIsOpen(!0)},label:"Do Action"})),react.createElement(Drawer.A,{isOpen,onUserDismiss:()=>setIsOpen(!1)},react.createElement("div",{className:"padding--y--s"},"🎬 Action!")))},index_stories={title:"Components/Combobox",component:Combobox.Ay,subcomponents:{ComboboxItem:ComboboxItem.A,ComboboxHeading:ComboboxHeading.A},argTypes:{icon:{options:["",...Combobox.y4]}}},WithCategoriesInForm=()=>{const[inputValue,setInputValue]=(0,react.useState)(""),[selectedValue,setSelectedValue]=(0,react.useState)("");return react.createElement(react.Fragment,null,react.createElement("div",null,"selected value ",selectedValue),react.createElement(Combobox.Ay,{label:"Select item",inputValue,onChange:selected=>{setSelectedValue(selected)},filterItemsByInput:(items,inputVal)=>items.filter((item=>{if(!item)return!1;return(item.props.searchValue||item.props.value).toLowerCase().includes(inputVal)})),onInputChange:selected=>{setInputValue(selected)}},react.createElement(Combobox.Ay.Category,{label:"Checking"},react.createElement(Combobox.Ay.Item,{searchValue:"Business Checking",value:"checking1"},"Business Checking - 11234"),react.createElement(Combobox.Ay.Item,{searchValue:"Main Checking",value:"checking2"},"Main Checking - 13989"),react.createElement(Combobox.Ay.Item,{searchValue:"Joint Checking",value:"checking3"},"Joint Checking - 14857")),react.createElement(Combobox.Ay.Category,{label:"Savings"},react.createElement(Combobox.Ay.Item,{searchValue:"Business Checking",value:"savings1"},"Business Savings - 13938"),react.createElement(Combobox.Ay.Item,{searchValue:"Main Savings",value:"savings2"},"Main Savings - 48274"),react.createElement(Combobox.Ay.Item,{searchValue:"Joint Savings",value:"savings3"},"Joint Savings - 48284")),react.createElement(Combobox.Ay.Category,{label:"External Accounts"},react.createElement(Combobox.Ay.Item,{value:"Sasha"},"Sasha - 84839"),react.createElement(Combobox.Ay.Item,{value:"Joan"},"Joan - 36183"),react.createElement(Combobox.Ay.Item,{value:"Benoit"},"Benoit - 53261"))))},OverridingMenuHeight=Template.bind({});OverridingMenuHeight.args={label:"Select your state (10vh menu)",icon:"search",maxMenuHeight:"10vh",children};const __namedExportsOrder=["Overview","WithIcon","CustomSearchStrings","WithHeadings","WithHintHeadings","WithError","NoChildren","FullyControlled","InADialog","WithCategories","CustomFiltering","WithActions","ScrollingBehavior","ClearingSelctionWithAction","WithCategoriesInForm","OverridingMenuHeight"];Overview.parameters={...Overview.parameters,docs:{...Overview.parameters?.docs,source:{originalSource:"args => <Combobox {...args} />",...Overview.parameters?.docs?.source}}},WithIcon.parameters={...WithIcon.parameters,docs:{...WithIcon.parameters?.docs,source:{originalSource:"args => <Combobox {...args} />",...WithIcon.parameters?.docs?.source}}},CustomSearchStrings.parameters={...CustomSearchStrings.parameters,docs:{...CustomSearchStrings.parameters?.docs,source:{originalSource:'args => <Combobox label={`Favorite Emoji (e.g. "Cactus")`} {...args}>\n    <Combobox.Item value="🐪" searchValue="Camel" />\n    <Combobox.Item value="📷" searchValue="Camera" />\n    <Combobox.Item value="🌵" searchValue="Cactus" />\n    <Combobox.Item value="🚬" searchValue="Cigarette" />\n    <Combobox.Item value="⭕️" searchValue="Circle Mark" />\n    <Combobox.Item value="🥒" searchValue="Cucumber" />\n    <Combobox.Item value="🇨🇺" searchValue="Cuban Flag" />\n    <Combobox.Item value="🥌" searchValue="Curling Stone" />\n    <Combobox.Item value="🐓" searchValue="Chicken" />\n    <Combobox.Item value="🎊" searchValue="Confetti Ball" />\n    <Combobox.Item value="🧥" searchValue="Coat" />\n    <Combobox.Item value="🧁" searchValue="Cupcake" />\n  </Combobox>',...CustomSearchStrings.parameters?.docs?.source}}},WithHeadings.parameters={...WithHeadings.parameters,docs:{...WithHeadings.parameters?.docs,source:{originalSource:'args => <Combobox label="Select Account" {...args}>\n    <Combobox.Heading text="Checking" />\n    <Combobox.Item value="Primary Checking - 4567" />\n    <Combobox.Item value="Secondary Checking - 9876" />\n    <Combobox.Heading text="Savings" />\n    <Combobox.Item value="Primary Savings - 1234" />\n    <Combobox.Item value="Cheese Fund - 5432" />\n  </Combobox>',...WithHeadings.parameters?.docs?.source}}},WithHintHeadings.parameters={...WithHintHeadings.parameters,docs:{...WithHintHeadings.parameters?.docs,source:{originalSource:'args => <Combobox label="Select Account" {...args}>\n    <Combobox.Heading text="Checking" kind="hint" />\n    <Combobox.Item value="Primary Checking - 4567" />\n    <Combobox.Item value="Secondary Checking - 9876" />\n    <Combobox.Heading text="Savings" kind="hint" />\n    <Combobox.Item value="Primary Savings - 1234" />\n    <Combobox.Item value="Cheese Fund - 5432" />\n  </Combobox>',...WithHintHeadings.parameters?.docs?.source}}},WithError.parameters={...WithError.parameters,docs:{...WithError.parameters?.docs,source:{originalSource:"args => <Combobox {...args} />",...WithError.parameters?.docs?.source}}},NoChildren.parameters={...NoChildren.parameters,docs:{...NoChildren.parameters?.docs,source:{originalSource:"args => <Combobox {...args} />",...NoChildren.parameters?.docs?.source}}},FullyControlled.parameters={...FullyControlled.parameters,docs:{...FullyControlled.parameters?.docs,source:{originalSource:'() => {\n  const [inputValue, setInputValue] = useState("");\n  const [allItems, setAllItems] = useState(["Primary Checking - 4567", "Secondary Checking - 9876", "Primary Savings - 1234", "Cheese Fund - 5432"]);\n  return <div>\n      <Combobox label="Select Account" inputValue={inputValue} onInputChange={val => setInputValue(val)}>\n        {allItems.map((item, i) => <Combobox.Item key={`${i}-${item}`} value={item} />)}\n      </Combobox>\n      <div className="margin--top">\n        <Row>\n          <Row.Item shrink>\n            <button className="margin--top" onClick={() => {\n            setInputValue("");\n          }}>\n              Clear input value\n            </button>\n          </Row.Item>\n          <Row.Item shrink>\n            <button className="margin--top" onClick={() => {\n            setAllItems(items => ["Extra Item!", ...items]);\n          }}>\n              Add an item to the top of the list\n            </button>\n          </Row.Item>\n        </Row>\n      </div>\n    </div>;\n}',...FullyControlled.parameters?.docs?.source}}},InADialog.parameters={...InADialog.parameters,docs:{...InADialog.parameters?.docs,source:{originalSource:'() => {\n  const [isOpen, setIsOpen] = useState(false);\n  return <>\n      <button onClick={() => {\n      setIsOpen(true);\n    }}>\n        Open dialog\n      </button>\n      <Dialog title="Dialog with a Combobox" isOpen={isOpen} onUserDismiss={() => setIsOpen(false)}>\n        <Combobox label="Select Account">\n          <Combobox.Heading text="Checking" />\n          <Combobox.Item value="Primary Checking - 4567" />\n          <Combobox.Item value="Secondary Checking - 9876" />\n          <Combobox.Item value="Other Checking - 1112" />\n          <Combobox.Item value="Wow, more Checking - 3112" />\n          <Combobox.Heading text="Savings" />\n          <Combobox.Item value="Primary Savings - 1234" />\n          <Combobox.Item value="Cheese Fund - 5432" />\n        </Combobox>\n      </Dialog>\n    </>;\n}',...InADialog.parameters?.docs?.source}}},WithCategories.parameters={...WithCategories.parameters,docs:{...WithCategories.parameters?.docs,source:{originalSource:"args => <Combobox {...args} />",...WithCategories.parameters?.docs?.source}}},CustomFiltering.parameters={...CustomFiltering.parameters,docs:{...CustomFiltering.parameters?.docs,source:{originalSource:"args => <Combobox {...args} />",...CustomFiltering.parameters?.docs?.source}}},WithActions.parameters={...WithActions.parameters,docs:{...WithActions.parameters?.docs,source:{originalSource:'() => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [inputValue, setInputValue] = useState("");\n  return <>\n      <Combobox label="Select Account" inputValue={inputValue} onInputChange={val => setInputValue(val)}>\n        <Combobox.Item value="Primary Checking - 4567" />\n        <Combobox.Item value="Cheese Fund - 5432" />\n        <Combobox.Item value="Primary Savings - 1234" />\n        <Combobox.Item value="Secondary Checking - 7892" />\n        <Combobox.Action onSelect={() => {\n        setIsOpen(true);\n      }} label="Do Action" />\n      </Combobox>\n      <Drawer isOpen={isOpen} onUserDismiss={() => setIsOpen(false)}>\n        <div className="padding--y--s">🎬 Action!</div>\n      </Drawer>\n    </>;\n}',...WithActions.parameters?.docs?.source}}},ScrollingBehavior.parameters={...ScrollingBehavior.parameters,docs:{...ScrollingBehavior.parameters?.docs,source:{originalSource:'() => {\n  return <main style={{\n    height: "200vh"\n  }}>\n      <div className="margin--bottom" style={{\n      marginTop: "100vh"\n    }} />\n      <Combobox label="Account">\n        <Combobox.Item value="checking1234">Checking (1234)</Combobox.Item>\n        <Combobox.Item value="savings4321">Savings (4321)</Combobox.Item>\n        <Combobox.Item value="checking5678">Checking (5678)</Combobox.Item>\n        <Combobox.Item value="savings9876">Savings (9876)</Combobox.Item>\n        <Combobox.Item value="money_market2468">\n          Money Market (2468)\n        </Combobox.Item>\n        <Combobox.Item value="cd1357">\n          Certificate of Deposit (1357)\n        </Combobox.Item>\n        <Combobox.Item value="checking9999">Checking (9999)</Combobox.Item>\n        <Combobox.Item value="savings1111">Savings (1111)</Combobox.Item>\n        <Combobox.Item value="ira8642">IRA (8642)</Combobox.Item>\n        <Combobox.Item value="checking7531">Checking (7531)</Combobox.Item>\n        <Combobox.Item value="savings0246">Savings (0246)</Combobox.Item>\n        <Combobox.Item value="money_market8024">\n          Money Market (8024)\n        </Combobox.Item>\n        <Combobox.Item value="checking3698">Checking (3698)</Combobox.Item>\n        <Combobox.Item value="savings7410">Savings (7410)</Combobox.Item>\n        <Combobox.Item value="cd9630">\n          Certificate of Deposit (9630)\n        </Combobox.Item>\n        <Combobox.Item value="checking1593">Checking (1593)</Combobox.Item>\n        <Combobox.Item value="savings7529">Savings (7529)</Combobox.Item>\n        <Combobox.Item value="ira4816">IRA (4816)</Combobox.Item>\n        <Combobox.Item value="money_market3571">\n          Money Market (3571)\n        </Combobox.Item>\n        <Combobox.Item value="checking8642">Checking (8642)</Combobox.Item>\n      </Combobox>\n    </main>;\n}',...ScrollingBehavior.parameters?.docs?.source}}},ClearingSelctionWithAction.parameters={...ClearingSelctionWithAction.parameters,docs:{...ClearingSelctionWithAction.parameters?.docs,source:{originalSource:'() => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [inputValue, setInputValue] = useState("");\n  return <>\n      <Combobox label="Select Account" inputValue={inputValue} onInputChange={val => setInputValue(val)} clearSelectionOnAction={true}>\n        <Combobox.Item value="Primary Checking - 4567" />\n        <Combobox.Item value="Cheese Fund - 5432" />\n        <Combobox.Item value="Primary Savings - 1234" />\n        <Combobox.Item value="Secondary Checking - 7892" />\n        <Combobox.Action onSelect={() => {\n        setIsOpen(true);\n      }} label="Do Action" />\n      </Combobox>\n      <Drawer isOpen={isOpen} onUserDismiss={() => setIsOpen(false)}>\n        <div className="padding--y--s">🎬 Action!</div>\n      </Drawer>\n    </>;\n}',...ClearingSelctionWithAction.parameters?.docs?.source}}},WithCategoriesInForm.parameters={...WithCategoriesInForm.parameters,docs:{...WithCategoriesInForm.parameters?.docs,source:{originalSource:'() => {\n  const [inputValue, setInputValue] = useState("");\n  const [selectedValue, setSelectedValue] = useState("");\n  return <>\n      <div>selected value {selectedValue}</div>\n      <Combobox label="Select item" inputValue={inputValue} onChange={selected => {\n      setSelectedValue(selected);\n    }} filterItemsByInput={(items, inputVal) => {\n      return items.filter(item => {\n        if (!item) return false;\n        const query = (item.props.searchValue || item.props.value).toLowerCase();\n        return query.includes(inputVal);\n      });\n    }} onInputChange={selected => {\n      setInputValue(selected);\n    }}>\n        <Combobox.Category label="Checking">\n          <Combobox.Item searchValue="Business Checking" value="checking1">\n            Business Checking - 11234\n          </Combobox.Item>\n          <Combobox.Item searchValue="Main Checking" value="checking2">\n            Main Checking - 13989\n          </Combobox.Item>\n          <Combobox.Item searchValue="Joint Checking" value="checking3">\n            Joint Checking - 14857\n          </Combobox.Item>\n        </Combobox.Category>\n        <Combobox.Category label="Savings">\n          <Combobox.Item searchValue="Business Checking" value="savings1">\n            Business Savings - 13938\n          </Combobox.Item>\n          <Combobox.Item searchValue="Main Savings" value="savings2">\n            Main Savings - 48274\n          </Combobox.Item>\n          <Combobox.Item searchValue="Joint Savings" value="savings3">\n            Joint Savings - 48284\n          </Combobox.Item>\n        </Combobox.Category>\n        <Combobox.Category label="External Accounts">\n          <Combobox.Item value="Sasha">Sasha - 84839</Combobox.Item>\n          <Combobox.Item value="Joan">Joan - 36183</Combobox.Item>\n          <Combobox.Item value="Benoit">Benoit - 53261</Combobox.Item>\n        </Combobox.Category>\n      </Combobox>\n    </>;\n}',...WithCategoriesInForm.parameters?.docs?.source}}},OverridingMenuHeight.parameters={...OverridingMenuHeight.parameters,docs:{...OverridingMenuHeight.parameters?.docs,source:{originalSource:"args => <Combobox {...args} />",...OverridingMenuHeight.parameters?.docs?.source}}}}}]);