(self.webpackChunk_narmi_design_system=self.webpackChunk_narmi_design_system||[]).push([[9544],{"./node_modules/classcat/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";function cc(names){if("string"==typeof names||"number"==typeof names)return""+names;let out="";if(Array.isArray(names))for(let tmp,i=0;i<names.length;i++)""!==(tmp=cc(names[i]))&&(out+=(out&&" ")+tmp);else for(let k in names)names[k]&&(out+=(out&&" ")+k);return out}__webpack_require__.d(__webpack_exports__,{A:()=>cc})},"./node_modules/prop-types/factoryWithThrowingShims.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";var ReactPropTypesSecret=__webpack_require__("./node_modules/prop-types/lib/ReactPropTypesSecret.js");function emptyFunction(){}function emptyFunctionWithReset(){}emptyFunctionWithReset.resetWarningCache=emptyFunction,module.exports=function(){function shim(props,propName,componentName,location,propFullName,secret){if(secret!==ReactPropTypesSecret){var err=new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");throw err.name="Invariant Violation",err}}function getShim(){return shim}shim.isRequired=shim;var ReactPropTypes={array:shim,bigint:shim,bool:shim,func:shim,number:shim,object:shim,string:shim,symbol:shim,any:shim,arrayOf:getShim,element:shim,elementType:shim,instanceOf:getShim,node:shim,objectOf:getShim,oneOf:getShim,oneOfType:getShim,shape:getShim,exact:getShim,checkPropTypes:emptyFunctionWithReset,resetWarningCache:emptyFunction};return ReactPropTypes.PropTypes=ReactPropTypes,ReactPropTypes}},"./node_modules/prop-types/index.js":(module,__unused_webpack_exports,__webpack_require__)=>{module.exports=__webpack_require__("./node_modules/prop-types/factoryWithThrowingShims.js")()},"./node_modules/prop-types/lib/ReactPropTypesSecret.js":module=>{"use strict";module.exports="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED"},"./src/Pagination/index.stories.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{FullyControlled:()=>FullyControlled,Overview:()=>Overview,__namedExportsOrder:()=>__namedExportsOrder,default:()=>index_stories});var react=__webpack_require__("./node_modules/react/index.js"),prop_types=__webpack_require__("./node_modules/prop-types/index.js"),prop_types_default=__webpack_require__.n(prop_types),classcat=__webpack_require__("./node_modules/classcat/index.js");const MAX_VISIBLE_PAGES=5,range=(start,end)=>[...Array(end-start+1)].map(((_,i)=>start+i)),usePagination=_ref=>{let{totalPages,selectedPageNumber=1,windowSize=MAX_VISIBLE_PAGES}=_ref;const normalizedTotalPages=Math.max(1,totalPages),normalizedSelectedPage=Math.max(1,Math.min(selectedPageNumber,normalizedTotalPages)),visiblePages=(0,react.useMemo)((()=>((totalPages,selectedPage,windowSize)=>{if(totalPages<=windowSize+1)return range(1,totalPages);const effectiveSize=2===[selectedPage>Math.ceil(windowSize/2),selectedPage<=totalPages-Math.floor(windowSize/2)].filter(Boolean).length?windowSize-2:windowSize;let start=selectedPage-Math.floor(effectiveSize/2),end=start+effectiveSize-1;return start<1?(start=1,end=effectiveSize):end>totalPages&&(end=totalPages,start=totalPages-effectiveSize+1),range(start,end)})(normalizedTotalPages,normalizedSelectedPage,windowSize)),[normalizedTotalPages,normalizedSelectedPage,windowSize]);return{visiblePages,selectedPage:normalizedSelectedPage,selectedIndex:visiblePages.indexOf(normalizedSelectedPage),showFirstPage:visiblePages[0]>1,showLastPage:visiblePages[visiblePages.length-1]<normalizedTotalPages,showPrev:normalizedSelectedPage>1,showNext:normalizedSelectedPage<normalizedTotalPages}},noop=()=>{},Pagination=_ref=>{let{onPageChange=noop,totalPages=1,defaultSelectedPage=1,selectedPage:selectedPageControlled,testId}=_ref;const isControlled=void 0!==selectedPageControlled,[selectedPageInternal,setSelectedPageInternal]=(0,react.useState)(defaultSelectedPage),selectedPage=isControlled?selectedPageControlled:selectedPageInternal,{visiblePages,selectedIndex,showPrev,showNext,showFirstPage,showLastPage}=usePagination({totalPages,selectedPageNumber:selectedPage}),handlePageClick=_ref2=>{let{target}=_ref2;const targetPage=parseInt(target.dataset.page,10);isControlled||setSelectedPageInternal(targetPage),onPageChange(targetPage)},handlePrevClick=()=>{const previousPage=selectedPage-1;isControlled||setSelectedPageInternal(previousPage),onPageChange(previousPage)},handleNextClick=()=>{const nextPage=selectedPage+1;isControlled||setSelectedPageInternal(nextPage),onPageChange(nextPage)},pagination=react.createElement("div",{className:"nds-typography nds-pagination","data-testid":testId},react.createElement("nav",{"aria-label":"pagination"},react.createElement("ul",null,react.createElement("li",null,react.createElement("span",{role:"button",tabIndex:0,"aria-disabled":!showPrev,"aria-label":"Previous page",onClick:handlePrevClick,onKeyUp:_ref3=>{let{key}=_ref3;"Enter"===key&&handlePrevClick()},className:(0,classcat.A)(["nds-pagination-page","padding--none",{"nds-pagination-page--disabled":!showPrev}])},react.createElement("i",{role:"img",className:"narmi-icon-chevron-left fontSize--l"}))),showFirstPage&&react.createElement("li",null,react.createElement("span",{role:"button",tabIndex:0,"aria-label":"First page",onClick:handlePageClick,onKeyUp:e=>{"Enter"===e.key&&handlePageClick(e)},"data-page":1,className:"nds-pagination-page"},"1")),showFirstPage&&react.createElement("li",null,react.createElement("div",{className:"nds-pagination-ellipsis"},"…")),visiblePages.map(((page,i)=>react.createElement("li",{key:`page-${page}`},react.createElement("span",{role:"button",tabIndex:0,className:(0,classcat.A)(["nds-pagination-page",{"nds-pagination-page--selected":i===selectedIndex}]),"data-page":page,onClick:handlePageClick,onKeyUp:e=>{"Enter"===e.key&&handlePageClick(e)},"aria-label":`Page ${page}`,"aria-current":i===selectedIndex&&"page"},page.toString())))),showLastPage&&react.createElement("li",null,react.createElement("div",{className:"nds-pagination-ellipsis"},"…")),showLastPage&&react.createElement("li",null,react.createElement("span",{role:"button",tabIndex:0,"aria-label":"Last page",onClick:handlePageClick,onKeyUp:e=>{"Enter"===e.key&&handlePageClick(e)},"data-page":totalPages,className:"nds-pagination-page"},totalPages.toString())),react.createElement("li",null,react.createElement("span",{role:"button",tabIndex:0,"aria-disabled":!showNext,"aria-label":"Next page",onClick:handleNextClick,onKeyUp:_ref4=>{let{key}=_ref4;"Enter"===key&&handleNextClick()},className:(0,classcat.A)(["nds-pagination-page","padding--none",{"nds-pagination-page--disabled":!showNext}])},react.createElement("i",{role:"img",className:"narmi-icon-chevron-right fontSize--l"}))))));return totalPages>1?pagination:react.createElement(react.Fragment,null)};Pagination.propTypes={totalPages:prop_types_default().number.isRequired,defaultSelectedPage:prop_types_default().number,selectedPage:prop_types_default().number,onPageChange:prop_types_default().func,testId:prop_types_default().string};const src_Pagination=Pagination;Pagination.__docgenInfo={description:"Component that allows users to navigate between pages of information.\nYour application is responsible for setting the total number of pages and\nresponding to the `onPageChange` callback.\n\nThe component will handle which page numbers to render, next and previous arrows,\nand conditionally rendering first and last pages.\n\nIf your pagination setup expects a fully controlled component, you may set `defaultSelectedPage` on every `onPageChange` call.",methods:[],displayName:"Pagination",props:{onPageChange:{defaultValue:{value:"() => {}",computed:!1},description:"Callback invoked when user selects a new page via page numbers or\nprevious/next arrows.\n\nInvoked with selected page number as the argument.",type:{name:"func"},required:!1},totalPages:{defaultValue:{value:"1",computed:!1},description:"Total number of pages\nIf the number of pages is 1, pagination will not render",type:{name:"number"},required:!1},defaultSelectedPage:{defaultValue:{value:"1",computed:!1},description:"Default selected page by page number (uncontrolled)",type:{name:"number"},required:!1},selectedPage:{description:"Selected page by page number (controlled).\nIn fully controlled mode, you **must** define an `onPageChange`\nhandler to update the value of the `selectedPage` prop.",type:{name:"number"},required:!1},testId:{description:"Optional value for `data-testid` attribute",type:{name:"string"},required:!1}}};const Overview=(args=>react.createElement(src_Pagination,args)).bind({});Overview.args={totalPages:40,defaultSelectedPage:3};const FullyControlled=()=>{const[selectedPage,setSelectedPage]=(0,react.useState)(1),[totalPages,setTotalPages]=(0,react.useState)(40);return react.createElement(react.Fragment,null,react.createElement(src_Pagination,{totalPages,selectedPage,onPageChange:page=>{setSelectedPage(parseInt(page,10))}}),react.createElement("div",{className:"padding--all border--top margin--top"},react.createElement("label",{htmlFor:"totalPages"},"Total pages"),react.createElement("select",{className:"margin--left",id:"totalPages",onChange:e=>setTotalPages(parseInt(e.target.value),10)},react.createElement("option",{value:"1"},"1"),react.createElement("option",{value:"3"},"3"),react.createElement("option",{value:"25"},"25"),react.createElement("option",{value:"40",selected:!0},"40"))))},index_stories={title:"Components/Pagination",component:src_Pagination},__namedExportsOrder=["Overview","FullyControlled"];Overview.parameters={...Overview.parameters,docs:{...Overview.parameters?.docs,source:{originalSource:"args => <Pagination {...args} />",...Overview.parameters?.docs?.source}}},FullyControlled.parameters={...FullyControlled.parameters,docs:{...FullyControlled.parameters?.docs,source:{originalSource:'() => {\n  const [selectedPage, setSelectedPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(40);\n  const handlePageChange = page => {\n    setSelectedPage(parseInt(page, 10));\n  };\n  return <>\n      <Pagination totalPages={totalPages} selectedPage={selectedPage} onPageChange={handlePageChange} />\n      <div className="padding--all border--top margin--top">\n        <label htmlFor="totalPages">Total pages</label>\n        <select className="margin--left" id="totalPages" onChange={e => setTotalPages(parseInt(e.target.value), 10)}>\n          <option value="1">1</option>\n          <option value="3">3</option>\n          <option value="25">25</option>\n          <option value="40" selected>\n            40\n          </option>\n        </select>\n      </div>\n    </>;\n}',...FullyControlled.parameters?.docs?.source}}}}}]);