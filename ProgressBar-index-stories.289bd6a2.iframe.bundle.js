"use strict";(self.webpackChunk_narmi_design_system=self.webpackChunk_narmi_design_system||[]).push([[8038],{"./src/ProgressBar/index.stories.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Overview:()=>Overview,__namedExportsOrder:()=>__namedExportsOrder,default:()=>index_stories});__webpack_require__("./node_modules/react/index.js");var prop_types=__webpack_require__("./node_modules/prop-types/index.js"),prop_types_default=__webpack_require__.n(prop_types),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");const ProgressBar=_ref=>{let{totalWidth="100%",percentComplete=0}=_ref;return(0,jsx_runtime.jsx)("div",{className:"nds-progressbar",style:{width:"".concat(totalWidth),height:"var(--font-size-default)"},children:(0,jsx_runtime.jsx)("svg",{xmlns:"http://www.w3.org/2000/svg",children:(0,jsx_runtime.jsx)("line",{x1:"0%",y1:"50%",x2:"".concat(percentComplete,"%"),y2:"50%",strokeWidth:"100%"})})})};ProgressBar.displayName="ProgressBar",ProgressBar.propTypes={totalWidth:prop_types_default().string,percentComplete:prop_types_default().number.isRequired};const src_ProgressBar=ProgressBar;var _Overview$parameters,_Overview$parameters2;ProgressBar.__docgenInfo={description:"",methods:[],displayName:"ProgressBar",props:{totalWidth:{defaultValue:{value:'"100%"',computed:!1},description:'CSS Value; Total width of progress bar.\n(e.g. "50%" or "200px")',type:{name:"string"},required:!1},percentComplete:{defaultValue:{value:"0",computed:!1},description:"Percent complete",type:{name:"number"},required:!1}}};const Template=args=>(0,jsx_runtime.jsx)(src_ProgressBar,{...args});Template.displayName="Template";const Overview=Template.bind({});Overview.args={percentComplete:25};const index_stories={title:"Components/ProgressBar",component:src_ProgressBar};Overview.parameters={...Overview.parameters,docs:{...null===(_Overview$parameters=Overview.parameters)||void 0===_Overview$parameters?void 0:_Overview$parameters.docs,source:{originalSource:"args => <ProgressBar {...args} />",...null===(_Overview$parameters2=Overview.parameters)||void 0===_Overview$parameters2||null===(_Overview$parameters2=_Overview$parameters2.docs)||void 0===_Overview$parameters2?void 0:_Overview$parameters2.source}}};const __namedExportsOrder=["Overview"]}}]);