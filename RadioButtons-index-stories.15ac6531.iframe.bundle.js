(self.webpackChunk_narmi_design_system=self.webpackChunk_narmi_design_system||[]).push([[7256],{"./node_modules/classcat/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";function cc(names){if("string"==typeof names||"number"==typeof names)return""+names;let out="";if(Array.isArray(names))for(let tmp,i=0;i<names.length;i++)""!==(tmp=cc(names[i]))&&(out+=(out&&" ")+tmp);else for(let k in names)names[k]&&(out+=(out&&" ")+k);return out}__webpack_require__.d(__webpack_exports__,{A:()=>cc})},"./node_modules/prop-types/factoryWithThrowingShims.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";var ReactPropTypesSecret=__webpack_require__("./node_modules/prop-types/lib/ReactPropTypesSecret.js");function emptyFunction(){}function emptyFunctionWithReset(){}emptyFunctionWithReset.resetWarningCache=emptyFunction,module.exports=function(){function shim(props,propName,componentName,location,propFullName,secret){if(secret!==ReactPropTypesSecret){var err=new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");throw err.name="Invariant Violation",err}}function getShim(){return shim}shim.isRequired=shim;var ReactPropTypes={array:shim,bigint:shim,bool:shim,func:shim,number:shim,object:shim,string:shim,symbol:shim,any:shim,arrayOf:getShim,element:shim,elementType:shim,instanceOf:getShim,node:shim,objectOf:getShim,oneOf:getShim,oneOfType:getShim,shape:getShim,exact:getShim,checkPropTypes:emptyFunctionWithReset,resetWarningCache:emptyFunction};return ReactPropTypes.PropTypes=ReactPropTypes,ReactPropTypes}},"./node_modules/prop-types/index.js":(module,__unused_webpack_exports,__webpack_require__)=>{module.exports=__webpack_require__("./node_modules/prop-types/factoryWithThrowingShims.js")()},"./node_modules/prop-types/lib/ReactPropTypesSecret.js":module=>{"use strict";module.exports="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED"},"./src/Error/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),prop_types__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/prop-types/index.js"),prop_types__WEBPACK_IMPORTED_MODULE_1___default=__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_1__);const ErrorLine=_ref=>{let{errorLine,marginTop="xxs"}=_ref;return errorLine?react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"nds-input-error margin--top--".concat(marginTop)},react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"fontSize--s margin--right--xxs narmi-icon-x-circle"}),errorLine):null};ErrorLine.propTypes={errorLine:prop_types__WEBPACK_IMPORTED_MODULE_1___default().string,marginTop:prop_types__WEBPACK_IMPORTED_MODULE_1___default().oneOf(["xxs","xs","s","m","l","xl","xxl","none"])};const Error=_ref2=>{let{error,marginTop="xxs"}=_ref2;return error?Array.isArray(error)?react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"nds-input-errorlist","aria-live":"polite"},error.map(((errorLine,index)=>react__WEBPACK_IMPORTED_MODULE_0__.createElement(ErrorLine,{key:errorLine,errorLine,marginTop:index?marginTop:"xxs"})))):react__WEBPACK_IMPORTED_MODULE_0__.createElement(ErrorLine,{errorLine:error,marginTop}):null};Error.propTypes={error:prop_types__WEBPACK_IMPORTED_MODULE_1___default().oneOf([prop_types__WEBPACK_IMPORTED_MODULE_1___default().string,prop_types__WEBPACK_IMPORTED_MODULE_1___default().arrayOf(prop_types__WEBPACK_IMPORTED_MODULE_1___default().string)]),marginTop:prop_types__WEBPACK_IMPORTED_MODULE_1___default().oneOf(["xxs","xs","s","m","l","xl","xxl","none"])};const __WEBPACK_DEFAULT_EXPORT__=Error;Error.__docgenInfo={description:"",methods:[],displayName:"Error",props:{marginTop:{defaultValue:{value:'"xxs"',computed:!1},description:"",type:{name:"enum",value:[{value:'"xxs"',computed:!1},{value:'"xs"',computed:!1},{value:'"s"',computed:!1},{value:'"m"',computed:!1},{value:'"l"',computed:!1},{value:'"xl"',computed:!1},{value:'"xxl"',computed:!1},{value:'"none"',computed:!1}]},required:!1},error:{description:"",type:{name:"enum",value:[{value:"PropTypes.string",computed:!0},{value:"PropTypes.arrayOf(PropTypes.string)",computed:!0}]},required:!1}}}},"./src/RadioButtons/index.stories.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{AsCard:()=>AsCard,AsCardWithDetails:()=>AsCardWithDetails,AsCardWithInput:()=>AsCardWithInput,AsCheckmark:()=>AsCheckmark,AsRadioButtonsWithDetails:()=>AsRadioButtonsWithDetails,AsRadioButtonsWithDetailsAlwaysShown:()=>AsRadioButtonsWithDetailsAlwaysShown,AsRow:()=>AsRow,AsRowWithDetails:()=>AsRowWithDetails,ErrorState:()=>ErrorState,Example:()=>Example,FullyControlled:()=>FullyControlled,Overview:()=>Overview,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),___WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/RadioButtons/index.tsx");const Template=args=>react__WEBPACK_IMPORTED_MODULE_0__.createElement(___WEBPACK_IMPORTED_MODULE_1__.A,args),Overview=Template.bind({});Overview.args={options:{OptionA:"A",OptionB:"B",OptionC:"C"},name:"options"};const Example=()=>{const[color,setColor]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)();return react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"nds-typography"},react__WEBPACK_IMPORTED_MODULE_0__.createElement("h3",{className:"margin--bottom--l"}," What is your favourite colour? "),react__WEBPACK_IMPORTED_MODULE_0__.createElement(___WEBPACK_IMPORTED_MODULE_1__.A,{options:{Red:"red",Blue:"blue",Green:"green",Yellow:"yellow"},name:"colours",onChange:e=>{setColor(e.target.value)}}),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",null,color&&`You have selected ${color}`))},ErrorState=Template.bind({});ErrorState.args={options:{OptionA:"A",OptionB:"B",OptionC:"C"},name:"options",error:"Selection required"};const FullyControlled=()=>{const[value,setValue]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)("blue");return react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment,null,react__WEBPACK_IMPORTED_MODULE_0__.createElement(___WEBPACK_IMPORTED_MODULE_1__.A,{options:{Red:"red",Blue:"blue",Green:"green",Yellow:"yellow"},name:"colours",onChange:e=>{setValue(e.target.value)},value}),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"margin--top"},react__WEBPACK_IMPORTED_MODULE_0__.createElement("button",{onClick:()=>{setValue(null)}},"Clear selection")))};FullyControlled.parameters={docs:{description:{story:"Passing a `value` prop makes the component fully controlled; you must manage the value of `value` with the `onChange` handler. To clear selection, pass `null` or an empty string to `value`."}}};const AsRadioButtonsWithDetails=Template.bind({});AsRadioButtonsWithDetails.args={options:{OptionA:{value:"A",details:"Option A details. The Option A details are very long and will wrap to the next line. The Option A details are very long and will wrap to the next line."},OptionB:{value:"B",details:"Option B details"},OptionC:{value:"C",details:"Option C details"}},name:"card_options_with_details"},AsRadioButtonsWithDetails.parameters={docs:{description:{story:"Renders a radio group styled as a cards. The cards will grow to fill the width of their parent container. Each card can have a `details` property to show additional information when the card is selected."}}};const AsRadioButtonsWithDetailsAlwaysShown=Template.bind({});AsRadioButtonsWithDetailsAlwaysShown.args={options:{OptionA:{value:"A",details:"Option A details. The Option A details are very long and will wrap to the next line. The Option A details are very long and will wrap to the next line."},OptionB:{value:"B",details:"Option B details"},OptionC:{value:"C",details:"Option C details"}},alwaysShowDetails:!0,name:"card_options_with_details"},AsRadioButtonsWithDetailsAlwaysShown.parameters={docs:{description:{story:"Renders a radio group styled as a cards. The cards will grow to fill the width of their parent container. Each card can have a `details` property to show additional information when the card is selected."}}};const AsCheckmark=Template.bind({});AsCheckmark.args={options:{OptionA:"A",OptionB:"B",OptionC:"C"},name:"card_options",kind:"checkmark"},AsCheckmark.parameters={docs:{description:{story:"Renders a radio group styled as labels with a checkmark indicating selection"}}};const AsCard=Template.bind({});AsCard.args={options:{OptionA:"A",OptionB:"B",OptionC:"C"},name:"card_options",kind:"card"},AsCard.parameters={docs:{description:{story:"Renders a radio group styled as a cards. The cards will grow to fill the width of their parent container."}}};const AsCardWithInput=Template.bind({});AsCardWithInput.args={alwaysShowDetails:!0,options:{"You will complete the form":{value:"A",details:"You'll enter all necessary details for this owner."},"Owner will complete the form":{value:"B",details:"Enter the owner's name and email and they'll securely input their own information."}},name:"card_options",kind:"input-card"},AsCardWithInput.parameters={docs:{description:{story:"When radio options are displayed as cards on a busier screen, use `input-card` to render a faux radio input inside a card as an extra affordance, helping the user recognize it as an interactive element."}}};const AsCardWithDetails=Template.bind({});AsCardWithDetails.args={options:{OptionA:{value:"A",details:"Option A details. The Option A details are very long and will wrap to the next line. The Option A details are very long and will wrap to the next line."},OptionB:{value:"B",details:"Option B details"},OptionC:{value:"C",details:"Option C details"}},name:"card_options_with_details",kind:"card"},AsCardWithDetails.parameters={docs:{description:{story:"Renders a radio group styled as a cards. The cards will grow to fill the width of their parent container. Each card can have a `details` property to show additional information when the card is selected."}}};const AsRow=Template.bind({});AsRow.args={options:{OptionA:"A",OptionB:"B",OptionC:"C"},name:"row_options",kind:"row"},AsRow.parameters={docs:{description:{story:"Renders a radio group styled as a row."}}};const AsRowWithDetails=Template.bind({});AsRowWithDetails.args={options:{OptionA:{value:"A",details:"Option A details"},OptionB:{value:"B",details:"Option B details"},OptionC:{value:"C",details:"Option C details"}},name:"row_options_with_details",kind:"row"},AsRowWithDetails.parameters={docs:{description:{story:"Renders a radio group styled as a row. Each radio button can have a `details` property to show additional information when the radio button is selected."}}};const __WEBPACK_DEFAULT_EXPORT__={title:"Components/RadioButtons",component:___WEBPACK_IMPORTED_MODULE_1__.A},__namedExportsOrder=["Overview","Example","ErrorState","FullyControlled","AsRadioButtonsWithDetails","AsRadioButtonsWithDetailsAlwaysShown","AsCheckmark","AsCard","AsCardWithInput","AsCardWithDetails","AsRow","AsRowWithDetails"];Overview.parameters={...Overview.parameters,docs:{...Overview.parameters?.docs,source:{originalSource:"args => <RadioButtons {...args} />",...Overview.parameters?.docs?.source}}},Example.parameters={...Example.parameters,docs:{...Example.parameters?.docs,source:{originalSource:'() => {\n  const [color, setColor] = useState();\n  return <div className="nds-typography">\n      <h3 className="margin--bottom--l"> What is your favourite colour? </h3>\n      <RadioButtons options={{\n      Red: "red",\n      Blue: "blue",\n      Green: "green",\n      Yellow: "yellow"\n    }} name="colours" onChange={e => {\n      setColor(e.target.value);\n    }} />\n      <div>{color && `You have selected ${color}`}</div>\n    </div>;\n}',...Example.parameters?.docs?.source}}},ErrorState.parameters={...ErrorState.parameters,docs:{...ErrorState.parameters?.docs,source:{originalSource:"args => <RadioButtons {...args} />",...ErrorState.parameters?.docs?.source}}},FullyControlled.parameters={...FullyControlled.parameters,docs:{...FullyControlled.parameters?.docs,source:{originalSource:'() => {\n  const [value, setValue] = useState("blue");\n  return <>\n      <RadioButtons options={{\n      Red: "red",\n      Blue: "blue",\n      Green: "green",\n      Yellow: "yellow"\n    }} name="colours" onChange={e => {\n      setValue(e.target.value);\n    }} value={value} />\n      <div className="margin--top">\n        <button onClick={() => {\n        setValue(null);\n      }}>\n          Clear selection\n        </button>\n      </div>\n    </>;\n}',...FullyControlled.parameters?.docs?.source}}},AsRadioButtonsWithDetails.parameters={...AsRadioButtonsWithDetails.parameters,docs:{...AsRadioButtonsWithDetails.parameters?.docs,source:{originalSource:"args => <RadioButtons {...args} />",...AsRadioButtonsWithDetails.parameters?.docs?.source}}},AsRadioButtonsWithDetailsAlwaysShown.parameters={...AsRadioButtonsWithDetailsAlwaysShown.parameters,docs:{...AsRadioButtonsWithDetailsAlwaysShown.parameters?.docs,source:{originalSource:"args => <RadioButtons {...args} />",...AsRadioButtonsWithDetailsAlwaysShown.parameters?.docs?.source}}},AsCheckmark.parameters={...AsCheckmark.parameters,docs:{...AsCheckmark.parameters?.docs,source:{originalSource:"args => <RadioButtons {...args} />",...AsCheckmark.parameters?.docs?.source}}},AsCard.parameters={...AsCard.parameters,docs:{...AsCard.parameters?.docs,source:{originalSource:"args => <RadioButtons {...args} />",...AsCard.parameters?.docs?.source}}},AsCardWithInput.parameters={...AsCardWithInput.parameters,docs:{...AsCardWithInput.parameters?.docs,source:{originalSource:"args => <RadioButtons {...args} />",...AsCardWithInput.parameters?.docs?.source}}},AsCardWithDetails.parameters={...AsCardWithDetails.parameters,docs:{...AsCardWithDetails.parameters?.docs,source:{originalSource:"args => <RadioButtons {...args} />",...AsCardWithDetails.parameters?.docs?.source}}},AsRow.parameters={...AsRow.parameters,docs:{...AsRow.parameters?.docs,source:{originalSource:"args => <RadioButtons {...args} />",...AsRow.parameters?.docs?.source}}},AsRowWithDetails.parameters={...AsRowWithDetails.parameters,docs:{...AsRowWithDetails.parameters?.docs,source:{originalSource:"args => <RadioButtons {...args} />",...AsRowWithDetails.parameters?.docs?.source}}}},"./src/RadioButtons/index.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});__webpack_require__("./node_modules/core-js/modules/web.dom-collections.iterator.js");var react__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react/index.js"),classcat__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/classcat/index.js"),_Error__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/Error/index.js");const _excluded=["options","name","initialValue","value","kind","onChange","testId","error","alwaysShowDetails"];function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}const RadioButtons=_ref=>{let{options,name,initialValue,value,kind="normal",onChange=()=>{},testId,error,alwaysShowDetails=!1}=_ref,containerProps=function _objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function _objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(-1!==e.indexOf(n))continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],-1===t.indexOf(o)&&{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(_ref,_excluded);const isControlled=void 0!==value,hasError=void 0!==error&&error.length>0,[checkedValue,setCheckedValue]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(isControlled?value:initialValue),[focusedValue,setFocusedValue]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);(0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)((()=>{isControlled&&setCheckedValue(value)}),[value]);const handleChange=e=>{isControlled||setCheckedValue(e.target.value),onChange(e)},handleFocus=_ref2=>{let{target}=_ref2;setFocusedValue(target.value)},handleBlur=()=>{setFocusedValue(null)};return react__WEBPACK_IMPORTED_MODULE_1__.createElement(react__WEBPACK_IMPORTED_MODULE_1__.Fragment,null,react__WEBPACK_IMPORTED_MODULE_1__.createElement("div",_extends({className:"nds-radiobuttons nds-radiobuttons--".concat(kind),onChange:handleChange,"data-testid":testId},containerProps),Object.entries(options).map((_ref3=>{let[label,subOptions]=_ref3;const inputOption="object"==typeof subOptions?subOptions:{value:subOptions},inputValue=inputOption.value,details=inputOption.details;return react__WEBPACK_IMPORTED_MODULE_1__.createElement("label",{className:(0,classcat__WEBPACK_IMPORTED_MODULE_3__.A)(["nds-radiobuttons-option","fontWeight--default",{"nds-radiobuttons-option--checked":checkedValue==inputValue,"nds-radiobuttons-option--focused":focusedValue==inputValue,"nds-radiobuttons-option--error":hasError,"padding--all rounded--all border--all":["card","input-card"].includes(kind)}]),key:inputValue},react__WEBPACK_IMPORTED_MODULE_1__.createElement("div",{className:"nds-radiobuttons-label-container"},label,react__WEBPACK_IMPORTED_MODULE_1__.createElement("input",{type:"radio","aria-label":"Radio ".concat(name," option ").concat(label),checked:checkedValue===inputValue,onChange:handleChange,onFocus:handleFocus,onBlur:handleBlur,value:inputValue,name}),react__WEBPACK_IMPORTED_MODULE_1__.createElement("div",{role:"presentation",className:(0,classcat__WEBPACK_IMPORTED_MODULE_3__.A)(["nds-radio",{"narmi-icon-check":["card","checkmark"].includes(kind)}])})),details&&react__WEBPACK_IMPORTED_MODULE_1__.createElement("div",{className:(0,classcat__WEBPACK_IMPORTED_MODULE_3__.A)(["nds-radiobutton-details",{"nds-radiobutton-details--checked":alwaysShowDetails||checkedValue==inputValue,"fontColor--secondary":"card"!=kind,"fontSize--s":"card"!=kind}])},details))}))),react__WEBPACK_IMPORTED_MODULE_1__.createElement("div",{className:(0,classcat__WEBPACK_IMPORTED_MODULE_3__.A)([{"margin--top--s":"row"!==kind&&"row-start"!==kind}])},react__WEBPACK_IMPORTED_MODULE_1__.createElement(_Error__WEBPACK_IMPORTED_MODULE_2__.A,{error})))},__WEBPACK_DEFAULT_EXPORT__=RadioButtons;try{RadioButtons.displayName="RadioButtons",RadioButtons.__docgenInfo={description:'The Narmi RadioButtons component expects an "options" Prop, which is an object where the keys are the radiobutton\nlabels and the values are the radiobutton values. An "initialvalue" Prop can be passed to set a default checked\nradiobutton.\n```\noptions={{\n "First Label": { value: "firstValue", details: "This is the explanation of the firstValue" },\n "Second Label": { value: "secondValue", details: "This is the explanation of the secondValue" }\n}\n```\n\nThe other options configuration without details would be:\n```\noptions={{ "First Label": "firstValue", "Second Label": "secondValue" }}\n```',displayName:"RadioButtons",props:{options:{defaultValue:null,description:"Map of label strings to input values\n\nTODO: restore this type when we can do it in a non-breaking way\n```\ntype OptionType = {\n     value: string;\n     details?: string;\n   }\n | string;\n```",name:"options",required:!1,type:{name:"object"}},name:{defaultValue:null,description:"name of radiogroup",name:"name",required:!0,type:{name:"string"}},initialValue:{defaultValue:null,description:"initially selected option by input value (uncontrolled)",name:"initialValue",required:!1,type:{name:"unknown"}},value:{defaultValue:null,description:"selected option by input value (fully controlled)\nWhen passing a `value` prop, you must use the `onChange`\nhandler to update the `value`",name:"value",required:!1,type:{name:"string"}},onChange:{defaultValue:{value:"() => {}"},description:"change callback invoked with input value",name:"onChange",required:!1,type:{name:"(e: ChangeEvent<HTMLInputElement>) => void"}},kind:{defaultValue:{value:"normal"},description:"`normal` - display input and label normally\n\n`card` - display input and label as a toggleable card\n\n`input-card` - display toggleable card with a faux radio input\n\n`checkmark` - uses a checkmark icon instead of a faux radio",name:"kind",required:!1,type:{name:"enum",value:[{value:'"normal"'},{value:'"row"'},{value:'"row-start"'},{value:'"card"'},{value:'"input-card"'},{value:'"checkmark"'}]}},error:{defaultValue:null,description:"Error message. When passed, the `error` prop will\nrender the radio group in an error state.",name:"error",required:!1,type:{name:"string"}},alwaysShowDetails:{defaultValue:{value:"false"},description:"Always show details. When `true`, the details will\nalways be shown, regardless of if an radio button is selected.\nWhen `false`, the details will only be shown when a radio\nbutton is selected. Defaults to `false`",name:"alwaysShowDetails",required:!1,type:{name:"boolean"}},testId:{defaultValue:null,description:"Optional value for `data-testid` attribute",name:"testId",required:!1,type:{name:"string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/RadioButtons/index.tsx#RadioButtons"]={docgenInfo:RadioButtons.__docgenInfo,name:"RadioButtons",path:"src/RadioButtons/index.tsx#RadioButtons"})}catch(__react_docgen_typescript_loader_error){}}}]);