"use strict";(self.webpackChunk_narmi_design_system=self.webpackChunk_narmi_design_system||[]).push([[2119],{"./src/SeparatorList/index.stories.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{AsBreadcrumbs:()=>AsBreadcrumbs,NoWrap:()=>NoWrap,Overview:()=>Overview,__namedExportsOrder:()=>__namedExportsOrder,default:()=>index_stories});var react=__webpack_require__("./node_modules/react/index.js"),classcat=__webpack_require__("./node_modules/classcat/index.js");function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}const SeparatorList=_ref=>{let{separator="|",noWrap=!1,items=[],testId}=_ref;return react.createElement("ul",{className:(0,classcat.A)(["list--reset nds-typography nds-separatorList",{"nds-separatorList--noWrap":noWrap}]),"data-testid":testId},items.map(((item,i)=>{const itemProps={};return i!==items.length-1&&(itemProps["data-separator"]=separator),react.createElement("li",_extends({key:"".concat(i,"-").concat(separator)},itemProps),item)})))},src_SeparatorList=SeparatorList;try{SeparatorList.displayName="SeparatorList",SeparatorList.__docgenInfo={description:"Takes a list of elements and places a visual separator between items.",displayName:"SeparatorList",props:{items:{defaultValue:{value:"[]"},description:"",name:"items",required:!1,type:{name:"ReactNode[]"}},separator:{defaultValue:{value:"|"},description:"",name:"separator",required:!1,type:{name:"string"}},noWrap:{defaultValue:{value:"false"},description:"",name:"noWrap",required:!1,type:{name:"boolean"}},testId:{defaultValue:null,description:"",name:"testId",required:!1,type:{name:"string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/SeparatorList/index.tsx#SeparatorList"]={docgenInfo:SeparatorList.__docgenInfo,name:"SeparatorList",path:"src/SeparatorList/index.tsx#SeparatorList"})}catch(__react_docgen_typescript_loader_error){}const Template=args=>react.createElement(src_SeparatorList,args),Overview=Template.bind({});Overview.args={items:[react.createElement("a",{className:"fontColor--pine",href:"#"},"Get Sample Email"),react.createElement("a",{className:"fontColor--pine",href:"#"},"Edit"),react.createElement("a",{className:"fontColor--pine",href:"#"},"More")]};const AsBreadcrumbs=Template.bind({});AsBreadcrumbs.args={separator:"/",items:[react.createElement("span",{className:"fontColor--secondary"},"Account"),react.createElement("span",{className:"fontColor--secondary"},"Settings"),react.createElement("span",{className:"fontColor--primary"},"Email Preferences")]},AsBreadcrumbs.parameters={docs:{description:{story:"The `separator` prop takes any string, allowing you to compose other types of delimited lists like breadcrumbs."}}};const NoWrap=()=>react.createElement(src_SeparatorList,{noWrap:!0,items:[react.createElement("a",{href:"#",className:"fontColor--link"},"Account"),react.createElement("a",{href:"#",className:"fontColor--link"},"Settings"),react.createElement("a",{href:"#",className:"fontColor--link"},"Email Preferences"),react.createElement("a",{href:"#",className:"fontColor--link"},"Mail Preferences"),react.createElement("a",{href:"#",className:"fontColor--link"},"Phone Preferences"),react.createElement("a",{href:"#",className:"fontColor--link"},"Beverage Preferences"),react.createElement("a",{href:"#",className:"fontColor--link"},"Dietary Preferences")]}),index_stories={title:"Components/SeparatorList",component:src_SeparatorList},__namedExportsOrder=["Overview","AsBreadcrumbs","NoWrap"];Overview.parameters={...Overview.parameters,docs:{...Overview.parameters?.docs,source:{originalSource:"args => <SeparatorList {...args} />",...Overview.parameters?.docs?.source}}},AsBreadcrumbs.parameters={...AsBreadcrumbs.parameters,docs:{...AsBreadcrumbs.parameters?.docs,source:{originalSource:"args => <SeparatorList {...args} />",...AsBreadcrumbs.parameters?.docs?.source}}},NoWrap.parameters={...NoWrap.parameters,docs:{...NoWrap.parameters?.docs,source:{originalSource:'() => <SeparatorList noWrap={true} items={[<a href="#" className="fontColor--link">\n        Account\n      </a>, <a href="#" className="fontColor--link">\n        Settings\n      </a>, <a href="#" className="fontColor--link">\n        Email Preferences\n      </a>, <a href="#" className="fontColor--link">\n        Mail Preferences\n      </a>, <a href="#" className="fontColor--link">\n        Phone Preferences\n      </a>, <a href="#" className="fontColor--link">\n        Beverage Preferences\n      </a>, <a href="#" className="fontColor--link">\n        Dietary Preferences\n      </a>]} />',...NoWrap.parameters?.docs?.source}}}},"./node_modules/classcat/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{function cc(names){if("string"==typeof names||"number"==typeof names)return""+names;let out="";if(Array.isArray(names))for(let tmp,i=0;i<names.length;i++)""!==(tmp=cc(names[i]))&&(out+=(out&&" ")+tmp);else for(let k in names)names[k]&&(out+=(out&&" ")+k);return out}__webpack_require__.d(__webpack_exports__,{A:()=>cc})}}]);