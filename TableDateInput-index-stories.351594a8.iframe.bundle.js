(self.webpackChunk_narmi_design_system=self.webpackChunk_narmi_design_system||[]).push([[6856],{"./node_modules/classcat/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";function cc(names){if("string"==typeof names||"number"==typeof names)return""+names;let out="";if(Array.isArray(names))for(let tmp,i=0;i<names.length;i++)""!==(tmp=cc(names[i]))&&(out+=(out&&" ")+tmp);else for(let k in names)names[k]&&(out+=(out&&" ")+k);return out}__webpack_require__.d(__webpack_exports__,{A:()=>cc})},"./node_modules/prop-types/factoryWithThrowingShims.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";var ReactPropTypesSecret=__webpack_require__("./node_modules/prop-types/lib/ReactPropTypesSecret.js");function emptyFunction(){}function emptyFunctionWithReset(){}emptyFunctionWithReset.resetWarningCache=emptyFunction,module.exports=function(){function shim(props,propName,componentName,location,propFullName,secret){if(secret!==ReactPropTypesSecret){var err=new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");throw err.name="Invariant Violation",err}}function getShim(){return shim}shim.isRequired=shim;var ReactPropTypes={array:shim,bigint:shim,bool:shim,func:shim,number:shim,object:shim,string:shim,symbol:shim,any:shim,arrayOf:getShim,element:shim,elementType:shim,instanceOf:getShim,node:shim,objectOf:getShim,oneOf:getShim,oneOfType:getShim,shape:getShim,exact:getShim,checkPropTypes:emptyFunctionWithReset,resetWarningCache:emptyFunction};return ReactPropTypes.PropTypes=ReactPropTypes,ReactPropTypes}},"./node_modules/prop-types/index.js":(module,__unused_webpack_exports,__webpack_require__)=>{module.exports=__webpack_require__("./node_modules/prop-types/factoryWithThrowingShims.js")()},"./node_modules/prop-types/lib/ReactPropTypesSecret.js":module=>{"use strict";module.exports="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED"},"./src/DateInput/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),prop_types__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/prop-types/index.js"),prop_types__WEBPACK_IMPORTED_MODULE_4___default=__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_4__),_TextInput__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/TextInput/index.js"),flatpickr_dist_l10n_default__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/flatpickr/dist/l10n/default.js"),flatpickr__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/flatpickr/dist/esm/index.js");function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}const noop=()=>{},defaultRenderInput=(props,input,testId)=>react__WEBPACK_IMPORTED_MODULE_0__.createElement(_TextInput__WEBPACK_IMPORTED_MODULE_1__.A,_extends({ref:input,type:"date",required:!0,"data-testid":testId},props)),DateInput=_ref=>{let{disableDates,minDate,dateFormat,altInput,altFormat,defaultDate,onChange:onChangeProp=noop,useIsoOnChange=!0,disableMobile=!1,testId,disablePortal,renderInput=defaultRenderInput,...props}=_ref;const input=(0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)();flatpickr_dist_l10n_default__WEBPACK_IMPORTED_MODULE_2__.english.weekdays.shorthand=flatpickr_dist_l10n_default__WEBPACK_IMPORTED_MODULE_2__.english.weekdays.shorthand.map((abbrev=>abbrev.substr(0,2)));const flatpickrOptions={monthSelectorType:"static",locale:flatpickr_dist_l10n_default__WEBPACK_IMPORTED_MODULE_2__.english,allowInput:!0,dateFormat,minDate,altInput,altFormat,disableMobile,disable:disableDates,defaultDate,onChange:flatpickrVal=>{let locale=useIsoOnChange?"en-CA":"en-US";const selectedDate=new Date(flatpickrVal);if(isNaN(selectedDate))return;const formattedDate=new Intl.DateTimeFormat(locale).format(selectedDate);onChangeProp(formattedDate)},onReady:(dates,dateStr,instance)=>{altInput&&instance.altInput&&instance.altInput.setAttribute("aria-label",props.label||"Select date")}};return(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)((()=>{disablePortal&&(flatpickrOptions.static=!0),(0,flatpickr__WEBPACK_IMPORTED_MODULE_3__.A)(input.current,flatpickrOptions)}),[flatpickrOptions,input,disablePortal]),react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment,null,renderInput(props,input,testId))};DateInput.propTypes={label:prop_types__WEBPACK_IMPORTED_MODULE_4___default().string.isRequired,onChange:prop_types__WEBPACK_IMPORTED_MODULE_4___default().func,disableDates:prop_types__WEBPACK_IMPORTED_MODULE_4___default().array,minDate:prop_types__WEBPACK_IMPORTED_MODULE_4___default().bool,altFormat:prop_types__WEBPACK_IMPORTED_MODULE_4___default().string,altInput:prop_types__WEBPACK_IMPORTED_MODULE_4___default().bool,defaultDate:prop_types__WEBPACK_IMPORTED_MODULE_4___default().string,dateFormat:prop_types__WEBPACK_IMPORTED_MODULE_4___default().string,useIsoOnChange:prop_types__WEBPACK_IMPORTED_MODULE_4___default().bool,disableMobile:prop_types__WEBPACK_IMPORTED_MODULE_4___default().bool,testId:prop_types__WEBPACK_IMPORTED_MODULE_4___default().string,disablePortal:prop_types__WEBPACK_IMPORTED_MODULE_4___default().bool,renderInput:prop_types__WEBPACK_IMPORTED_MODULE_4___default().func},DateInput.defaultProps={onChange:()=>{},disableDates:[],dateFormat:"Y-m-d"};const __WEBPACK_DEFAULT_EXPORT__=DateInput;DateInput.__docgenInfo={description:"Single day picker.\nComposes NDS input with a [flatpickr](http://flatpickrjs.org) calendar UI.",methods:[],displayName:"DateInput",props:{onChange:{defaultValue:{value:"() => {}",computed:!1},description:"Fired with 'YYYY-MM-DD' selected date string when selected date changes",type:{name:"func"},required:!1},useIsoOnChange:{defaultValue:{value:"true",computed:!1},description:"If the `onChange` callback should pass the date string in ISO8601 format",type:{name:"bool"},required:!1},disableMobile:{defaultValue:{value:"false",computed:!1},description:"Disable mobile text inputs on mobile web",type:{name:"bool"},required:!1},renderInput:{defaultValue:{value:'(props, input, testId) => (\n  <TextInput ref={input} type="date" required data-testid={testId} {...props} />\n)',computed:!1},description:"Custom render function for the input element (props, input, testId) => <TextInput {...props} />",type:{name:"func"},required:!1},disableDates:{defaultValue:{value:"[]",computed:!1},description:"Disables dates. See [flatpickr docs](https://flatpickr.js.org/examples/#disabling-dates) for usage instructions",type:{name:"array"},required:!1},dateFormat:{defaultValue:{value:'"Y-m-d"',computed:!1},description:"Changes date format used in input. See [flatpickr docs](https://flatpickr.js.org/formatting/) for formatting options",type:{name:"string"},required:!1},label:{description:"Placeholder of the input",type:{name:"string"},required:!0},minDate:{description:"Sets the minimum selectable date (inclusive)",type:{name:"bool"},required:!1},altFormat:{description:"Alternate date format to show in input when a date is selected (e.g. 'm/d/Y')",type:{name:"string"},required:!1},altInput:{description:"When true, the input value will follow an alternate format defined by the `altFormat` prop",type:{name:"bool"},required:!1},defaultDate:{description:"Sets a default selected date.\nDateInput uses the format 'YYYY-MM-DD' by default.",type:{name:"string"},required:!1},testId:{description:"Optional value for `data-testid` attribute",type:{name:"string"},required:!1},disablePortal:{description:"When true, appends the calendar popup to the parent of the input instead of to document body",type:{name:"bool"},required:!1}}}},"./src/TableDateInput/index.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Overview:()=>Overview,WithDefaultDate:()=>WithDefaultDate,WithDisabledDates:()=>WithDisabledDates,__namedExportsOrder:()=>__namedExportsOrder,default:()=>index_stories});var react=__webpack_require__("./node_modules/react/index.js"),DateInput=__webpack_require__("./src/DateInput/index.js"),TableInput=__webpack_require__("./src/TableInput/index.tsx");function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}const TableDateInput=_ref=>{let{placeholder,label,hasError=!1,...otherProps}=_ref;return react.createElement(DateInput.A,_extends({},otherProps,{altInput:!0,altFormat:"m/d/Y",renderInput:(inputProps,inputRef,testId)=>{const{value="",...restInputProps}=inputProps;return react.createElement(TableInput.A,_extends({},restInputProps,{value,label,placeholder,ref:inputRef,"data-testid":testId,hasError}))}}))};TableDateInput.displayName="TableDateInput";const src_TableDateInput=TableDateInput;try{TableDateInput.displayName="TableDateInput",TableDateInput.__docgenInfo={description:"A date input component specifically designed for use within Table.Cell.\nComposes DateInput with TableInput to provide consistent table styling\nwhile maintaining all date picker functionality.\n\nSee `DateInput` for more detailed stories.",displayName:"TableDateInput",props:{label:{defaultValue:null,description:"Label of the input",name:"label",required:!0,type:{name:"string"}},placeholder:{defaultValue:null,description:"Placeholder of the input",name:"placeholder",required:!0,type:{name:"string"}},onChange:{defaultValue:null,description:"Fired with 'YYYY-MM-DD' selected date string when selected date changes",name:"onChange",required:!1,type:{name:"(date: string) => void"}},disableDates:{defaultValue:null,description:"Disables dates. See [flatpickr docs](https://flatpickr.js.org/examples/#disabling-dates) for usage instructions",name:"disableDates",required:!1,type:{name:"(string | Date | ((date: Date) => boolean))[]"}},minDate:{defaultValue:null,description:"Sets the minimum selectable date (inclusive)",name:"minDate",required:!1,type:{name:"string | Date"}},altFormat:{defaultValue:null,description:"Alternate date format to show in input when a date is selected (e.g. 'm/d/Y')",name:"altFormat",required:!1,type:{name:"string"}},altInput:{defaultValue:null,description:"When true, the input value will follow an alternate format defined by the `altFormat` prop",name:"altInput",required:!1,type:{name:"boolean"}},defaultDate:{defaultValue:null,description:"Sets a default selected date. DateInput uses the format 'YYYY-MM-DD' by default.",name:"defaultDate",required:!1,type:{name:"string"}},dateFormat:{defaultValue:null,description:"Changes date format used in input. See [flatpickr docs](https://flatpickr.js.org/formatting/) for formatting options",name:"dateFormat",required:!1,type:{name:"string"}},useIsoOnChange:{defaultValue:null,description:"If the `onChange` callback should pass the date string in ISO8601 format",name:"useIsoOnChange",required:!1,type:{name:"boolean"}},disableMobile:{defaultValue:null,description:"Disable mobile text inputs on mobile web",name:"disableMobile",required:!1,type:{name:"boolean"}},testId:{defaultValue:null,description:"Optional value for `data-testid` attribute",name:"testId",required:!1,type:{name:"string"}},disablePortal:{defaultValue:null,description:"When true, appends the calendar popup to the parent of the input instead to document body",name:"disablePortal",required:!1,type:{name:"boolean"}},hasError:{defaultValue:{value:"false"},description:"Whether the input has an errorj",name:"hasError",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/TableDateInput/index.tsx#TableDateInput"]={docgenInfo:TableDateInput.__docgenInfo,name:"TableDateInput",path:"src/TableDateInput/index.tsx#TableDateInput"})}catch(__react_docgen_typescript_loader_error){}const Template=args=>react.createElement(src_TableDateInput,args),Overview=Template.bind({});Overview.args={label:"Select date",placeholder:"MM/DD/YYYY"};const WithDefaultDate=()=>react.createElement(src_TableDateInput,{label:"Select a date",placeholder:"MM/DD/YYYY",defaultDate:"2024-01-15"}),WithDisabledDates=Template.bind({});WithDisabledDates.args={label:"Select any date (except today or tomorrow)",placeholder:"MM/DD/YYYY",disableDates:[new Date,new Date(Date.now()+864e5)]};const index_stories={title:"Components/TableDateInput",component:src_TableDateInput,parameters:{docs:{description:{component:"A date input component specifically designed for use within Table.Cell. Composes DateInput with TableInput to provide consistent table styling while maintaining all date picker functionality."}}}},__namedExportsOrder=["Overview","WithDefaultDate","WithDisabledDates"];Overview.parameters={...Overview.parameters,docs:{...Overview.parameters?.docs,source:{originalSource:"(args: TableDateInputProps) => <TableDateInput {...args} />",...Overview.parameters?.docs?.source}}},WithDefaultDate.parameters={...WithDefaultDate.parameters,docs:{...WithDefaultDate.parameters?.docs,source:{originalSource:'() => {\n  return <TableDateInput label="Select a date" placeholder="MM/DD/YYYY" defaultDate="2024-01-15" />;\n}',...WithDefaultDate.parameters?.docs?.source}}},WithDisabledDates.parameters={...WithDisabledDates.parameters,docs:{...WithDisabledDates.parameters?.docs,source:{originalSource:"(args: TableDateInputProps) => <TableDateInput {...args} />",...WithDisabledDates.parameters?.docs?.source}}}},"./src/TableInput/index.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),classcat__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/classcat/index.js");function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}const TableInput=react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(((_ref,ref)=>{let{value,onChange=()=>{},label,isDisabled=!1,placeholder,hasError=!1,...other}=_ref;return react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:(0,classcat__WEBPACK_IMPORTED_MODULE_1__.A)(["nds-tableField-input",{"nds-tableField-input--disabled":isDisabled,"nds-tableField-input--hasError":hasError}])},react__WEBPACK_IMPORTED_MODULE_0__.createElement("input",_extends({ref,type:"text","aria-label":label,value,onChange,placeholder,disabled:isDisabled,"aria-invalid":hasError},other)))}));TableInput.displayName="TableInput";const __WEBPACK_DEFAULT_EXPORT__=TableInput;try{TableInput.displayName="TableInput",TableInput.__docgenInfo={description:"A text input component specifically designed for use within Table.Cell.\nProvides consistent styling and behavior for editable table cells.",displayName:"TableInput",props:{value:{defaultValue:null,description:"Current value of the input",name:"value",required:!0,type:{name:"string"}},onChange:{defaultValue:{value:"() => {}"},description:"Callback when input value changes",name:"onChange",required:!1,type:{name:"(event: ChangeEvent<HTMLInputElement>) => void"}},label:{defaultValue:null,description:"Hidden label for accessibility - read by screen readers",name:"label",required:!0,type:{name:"string"}},placeholder:{defaultValue:null,description:"Optional placeholder text",name:"placeholder",required:!1,type:{name:"string"}},isDisabled:{defaultValue:{value:"false"},description:"Whether the input is disabled",name:"isDisabled",required:!1,type:{name:"boolean"}},hasError:{defaultValue:{value:"false"},description:"Whether the input has an error",name:"hasError",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/TableInput/index.tsx#TableInput"]={docgenInfo:TableInput.__docgenInfo,name:"TableInput",path:"src/TableInput/index.tsx#TableInput"})}catch(__react_docgen_typescript_loader_error){}}}]);