"use strict";(self.webpackChunk_narmi_design_system=self.webpackChunk_narmi_design_system||[]).push([[8257],{"./src/TokenInput/index.stories.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Overview:()=>Overview,UsingWithState:()=>UsingWithState,__namedExportsOrder:()=>__namedExportsOrder,default:()=>index_stories});__webpack_require__("./node_modules/core-js/modules/web.dom-collections.iterator.js");var react=__webpack_require__("./node_modules/react/index.js"),prop_types=(__webpack_require__("./node_modules/core-js/modules/es.string.replace.js"),__webpack_require__("./node_modules/prop-types/index.js")),prop_types_default=__webpack_require__.n(prop_types),FieldToken=__webpack_require__("./src/FieldToken/index.jsx"),TextInput=__webpack_require__("./src/TextInput/index.js"),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");const noop=()=>{},INPUT_RESET_EVENT={target:{value:""}},TokenInput=_ref=>{let{fieldName,label,fieldValue,onInputChange=noop,onTokensChange=noop,inputValue,tokens=[],delimiter=",",disabled=!1,...otherProps}=_ref;const inputRef=(0,react.useRef)(null),handleTokenDismiss=token=>{const newTokens=new Set(tokens);newTokens.delete(token),onTokensChange([...newTokens]),null!=inputRef&&inputRef.current&&inputRef.current.focus()};return(0,jsx_runtime.jsxs)("fieldset",{className:"nds-tokenInput",onClick:e=>{null!=inputRef&&inputRef.current&&(e.stopPropagation(),inputRef.current.focus())},children:[(0,jsx_runtime.jsx)("legend",{children:label}),(0,jsx_runtime.jsx)("input",{type:"hidden",id:fieldName,name:fieldName,value:fieldValue}),(0,jsx_runtime.jsx)(TextInput.A,{ref:inputRef,label,disabled,onChange:onInputChange,onBlur:()=>{onInputChange(INPUT_RESET_EVENT)},value:inputValue,startContent:(0,jsx_runtime.jsx)("div",{className:"nds-tokenInput-tokens margin--right--s",role:"list","aria-atomic":"true",children:tokens.map((label=>(0,jsx_runtime.jsx)(FieldToken.A,{label,disabled,onDismiss:disabled?noop:handleTokenDismiss},label)))}),onKeyUp:e=>{const{key}=e;if([delimiter,"Enter"].includes(key)){e.stopPropagation();const token=((inputValue,delimiter)=>inputValue.trim().replace(new RegExp("^[".concat(delimiter,"]+|[").concat(delimiter,"]+$"),"g"),""))(inputValue,delimiter);token.length>1&&(onTokensChange([...new Set([...tokens,token])]),onInputChange(INPUT_RESET_EVENT))}},...otherProps})]})};TokenInput.displayName="TokenInput",TokenInput.propTypes={label:prop_types_default().string.isRequired,fieldName:prop_types_default().string.isRequired,fieldValue:prop_types_default().string.isRequired,onInputChange:prop_types_default().func,inputValue:prop_types_default().string,disabled:prop_types_default().bool,onTokensChange:prop_types_default().func,tokens:prop_types_default().arrayOf(prop_types_default().string),isMultiline:prop_types_default().bool,delimiter:prop_types_default().string},TokenInput.__docgenInfo={description:'`TokenInput` is a **fully controlled** component used to show a list of "tokens"\na user has entered into the accompanying text input.',methods:[],displayName:"TokenInput",props:{onInputChange:{defaultValue:{value:"() => {}",computed:!1},description:"Input change callback",type:{name:"func"},required:!1},onTokensChange:{defaultValue:{value:"() => {}",computed:!1},description:"Called with the list of selected tokens\nas the argument when user updates tokens list",type:{name:"func"},required:!1},tokens:{defaultValue:{value:"[]",computed:!1},description:"List of selected tokens by name",type:{name:"arrayOf",value:{name:"string"}},required:!1},delimiter:{defaultValue:{value:'","',computed:!1},description:"Delimiter users can enter to tokenize text",type:{name:"string"},required:!1},disabled:{defaultValue:{value:"false",computed:!1},description:"Is the input disabled?",type:{name:"bool"},required:!1},label:{description:"Label for input",type:{name:"string"},required:!0},fieldName:{description:"Name of input that holds the submission value.\nThis should be the name of the field in the submitted form.",type:{name:"string"},required:!0},fieldValue:{description:"Value for the input with the given `name` prop.\nThis should be the value of the field in the submitted form.",type:{name:"string"},required:!0},inputValue:{description:"Value of input element",type:{name:"string"},required:!1},isMultiline:{description:"enables a multiline text input",type:{name:"bool"},required:!1}}};const src_TokenInput=TokenInput;var _Overview$parameters,_Overview$parameters2,_UsingWithState$param,_UsingWithState$param2;const Template=args=>(0,jsx_runtime.jsx)(src_TokenInput,{...args});Template.displayName="Template";const Overview=Template.bind({});Overview.args={label:"Which cities would you like to add?",tokens:["New York","Chicago"]};const UsingWithState=()=>{const[inputValue,setInputValue]=(0,react.useState)(""),[tokens,setTokens]=(0,react.useState)(["apples"]),value=tokens.join(",");return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsxs)("div",{className:"margin--bottom",style:{fontFamily:"consolas, monaco, monospaced"},children:[(0,jsx_runtime.jsx)("label",{htmlFor:"result",className:"fontColor--azul margin--right--l",children:"Hidden input value:"}),(0,jsx_runtime.jsx)("output",{name:"result",htmlFor:"favorite_foods",children:value})]}),(0,jsx_runtime.jsx)(src_TokenInput,{disabled:!0,label:"Favorite Foods",fieldName:"favorite_foods",fieldValue:value,inputValue,tokens,onInputChange:e=>{setInputValue(e.target.value)},onTokensChange:tokens=>{setTokens(tokens)}})]})},index_stories={title:"Components/TokenInput",component:src_TokenInput};Overview.parameters={...Overview.parameters,docs:{...null===(_Overview$parameters=Overview.parameters)||void 0===_Overview$parameters?void 0:_Overview$parameters.docs,source:{originalSource:"args => <TokenInput {...args} />",...null===(_Overview$parameters2=Overview.parameters)||void 0===_Overview$parameters2||null===(_Overview$parameters2=_Overview$parameters2.docs)||void 0===_Overview$parameters2?void 0:_Overview$parameters2.source}}},UsingWithState.parameters={...UsingWithState.parameters,docs:{...null===(_UsingWithState$param=UsingWithState.parameters)||void 0===_UsingWithState$param?void 0:_UsingWithState$param.docs,source:{originalSource:'() => {\n  const [inputValue, setInputValue] = useState("");\n  const [tokens, setTokens] = useState(["apples"]);\n  const value = tokens.join(","); // list formatted for submission\n  return <>\n      <div className="margin--bottom" style={{\n      fontFamily: "consolas, monaco, monospaced"\n    }}>\n        <label htmlFor="result" className="fontColor--azul margin--right--l">\n          Hidden input value:\n        </label>\n        <output name="result" htmlFor="favorite_foods">\n          {value}\n        </output>\n      </div>\n      <TokenInput disabled label="Favorite Foods" fieldName="favorite_foods" fieldValue={value} inputValue={inputValue} tokens={tokens} onInputChange={e => {\n      setInputValue(e.target.value);\n    }} onTokensChange={tokens => {\n      setTokens(tokens);\n    }} />\n    </>;\n}',...null===(_UsingWithState$param2=UsingWithState.parameters)||void 0===_UsingWithState$param2||null===(_UsingWithState$param2=_UsingWithState$param2.docs)||void 0===_UsingWithState$param2?void 0:_UsingWithState$param2.source}}};const __namedExportsOrder=["Overview","UsingWithState"];UsingWithState.__docgenInfo={description:"",methods:[],displayName:"UsingWithState"}},"./src/Error/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});__webpack_require__("./node_modules/react/index.js");var prop_types__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/prop-types/index.js"),prop_types__WEBPACK_IMPORTED_MODULE_2___default=__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_2__),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react/jsx-runtime.js");const Error=_ref=>{let{error,marginTop="xxs"}=_ref;return error?(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)("div",{className:"nds-input-error margin--top--".concat(marginTop),children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)("div",{className:"fontSize--s margin--right--xxs narmi-icon-x-circle"}),error]}):null};Error.displayName="Error",Error.propTypes={error:prop_types__WEBPACK_IMPORTED_MODULE_2___default().string,marginTop:prop_types__WEBPACK_IMPORTED_MODULE_2___default().oneOf(["xxs","xs","s","m","l","xl","xxl","none"])},Error.__docgenInfo={description:"",methods:[],displayName:"Error",props:{marginTop:{defaultValue:{value:'"xxs"',computed:!1},description:"",type:{name:"enum",value:[{value:'"xxs"',computed:!1},{value:'"xs"',computed:!1},{value:'"s"',computed:!1},{value:'"m"',computed:!1},{value:'"l"',computed:!1},{value:'"xl"',computed:!1},{value:'"xxl"',computed:!1},{value:'"none"',computed:!1}]},required:!1},error:{description:"",type:{name:"string"},required:!1}}};const __WEBPACK_DEFAULT_EXPORT__=Error},"./src/FieldToken/index.jsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),prop_types__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/prop-types/index.js"),prop_types__WEBPACK_IMPORTED_MODULE_3___default=__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_3__),classcat__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/classcat/index.js"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react/jsx-runtime.js");const noop=()=>{},FieldToken=react__WEBPACK_IMPORTED_MODULE_0__.forwardRef((function FieldToken(_ref,forwardedRef){let{label,onDismiss=noop,disabled=!1,testId}=_ref;return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)("div",{ref:forwardedRef,role:"listitem",className:(0,classcat__WEBPACK_IMPORTED_MODULE_2__.A)(["nds-fieldToken","padding--y--none","padding--left--s","padding--right--xs","rounded--all--l","fontSize--xs","fontWeight--semibold",{"nds-fieldToken--disabled":disabled}]),"data-testid":testId,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)("div",{className:"whiteSpace--truncate",style:{userSelect:"none"},children:label}),!disabled&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)("div",{className:"narmi-icon-x margin--left--xs",role:"button","aria-label":"Remove ".concat(label),tabIndex:0,onClick:e=>{e.stopPropagation(),onDismiss(label)},onKeyUp:_ref2=>{let{key}=_ref2;"Enter"!==key&&" "!=key||onDismiss(label)}})]})}));FieldToken.propTypes={label:prop_types__WEBPACK_IMPORTED_MODULE_3___default().string.isRequired,onDismiss:prop_types__WEBPACK_IMPORTED_MODULE_3___default().func,testId:prop_types__WEBPACK_IMPORTED_MODULE_3___default().string,disabled:prop_types__WEBPACK_IMPORTED_MODULE_3___default().bool},FieldToken.__docgenInfo={description:'Shared component to render "tokens" inside inputs, active filters,\nor other user selections we want to tokenize.',methods:[],displayName:"FieldToken",props:{onDismiss:{defaultValue:{value:"() => {}",computed:!1},description:"Callback for user dismissal action,\ncalled with token label as the argument",type:{name:"func"},required:!1},disabled:{defaultValue:{value:"false",computed:!1},description:"Disabled state for FieldToken",type:{name:"bool"},required:!1},label:{description:"Label text of tag.",type:{name:"string"},required:!0},testId:{description:"Optional value for `data-testid` attribute",type:{name:"string"},required:!1}}};const __WEBPACK_DEFAULT_EXPORT__=FieldToken},"./src/TextInput/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{y:()=>VALID_ICON_NAMES,A:()=>src_TextInput});__webpack_require__("./node_modules/core-js/modules/web.dom-collections.iterator.js");var react=__webpack_require__("./node_modules/react/index.js"),prop_types=__webpack_require__("./node_modules/prop-types/index.js"),prop_types_default=__webpack_require__.n(prop_types),Error=__webpack_require__("./src/Error/index.js"),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");const Input=_ref=>{let{id,label,startIconClass,endIconClass,startContent,endContent,tailContent,showClearButton,clearInput,disabled,multiline=!1,decoration,error,search,onClick,style,children,...props}=_ref;const className=["nds-input",disabled?"disabled":"",props.multiline?"multiline":"",error?"error":"",search?"search":""].join(" "),endIconJsx=showClearButton?(0,jsx_runtime.jsx)("div",{className:"nds-input-icon nds-input-close narmi-icon-x",onClick:clearInput,role:"button",tabIndex:"0","aria-label":"Clear Input"}):(0,jsx_runtime.jsx)("div",{className:"nds-input-icon nds-input-icon--faded ".concat(endIconClass)});return(0,jsx_runtime.jsxs)("div",{className,onClick,style,children:[(0,jsx_runtime.jsxs)("div",{className:"nds-input-box",children:[startContent&&(0,jsx_runtime.jsx)("div",{children:startContent}),startIconClass&&(0,jsx_runtime.jsx)("div",{className:"nds-input-icon nds-input-icon--faded ".concat(startIconClass)}),(0,jsx_runtime.jsxs)("div",{className:"nds-input-column ".concat(!label||startIconClass&&!multiline?"no-label":""),children:[children,decoration,multiline?"":(0,jsx_runtime.jsx)("label",{htmlFor:id,children:label})]}),(endIconClass||showClearButton)&&endIconJsx,endContent&&(0,jsx_runtime.jsx)("div",{children:endContent})]}),(0,jsx_runtime.jsxs)("div",{className:"nds-input-subline",children:[tailContent&&(0,jsx_runtime.jsx)("div",{className:"nds-input-tail margin--top--xxs",children:tailContent}),(0,jsx_runtime.jsx)(Error.A,{error})]})]})};Input.displayName="Input",Input.propTypes={id:prop_types_default().string,label:prop_types_default().string,startIconClass:prop_types_default().string,endIconClass:prop_types_default().string,startContent:prop_types_default().node,endContent:prop_types_default().node,tailContent:prop_types_default().node,showClearButton:prop_types_default().bool,clearInput:prop_types_default().func,decoration:prop_types_default().oneOfType([prop_types_default().node,prop_types_default().element]),multiline:prop_types_default().bool,disabled:prop_types_default().bool,search:prop_types_default().bool,onClick:prop_types_default().func,style:prop_types_default().object,error:prop_types_default().string,children:prop_types_default().oneOfType([prop_types_default().node,prop_types_default().arrayOf(prop_types_default().node)])},Input.__docgenInfo={description:"PRIVATE\n\nThis component has no stories because it is only used internally by NDS.\nIn a future release, this base Input component will be merged with TextInput.",methods:[],displayName:"Input",props:{multiline:{defaultValue:{value:"false",computed:!1},description:"",type:{name:"bool"},required:!1},id:{description:"",type:{name:"string"},required:!1},label:{description:"",type:{name:"string"},required:!1},startIconClass:{description:"full `narmi-icon-<shape>` className for icon at start of input",type:{name:"string"},required:!1},endIconClass:{description:"full `narmi-icon-<shape>` className for icon at end of input",type:{name:"string"},required:!1},startContent:{description:"arbitrary JSX to place at the start of the input",type:{name:"node"},required:!1},endContent:{description:"arbitrary JSX to place at the end of the input",type:{name:"node"},required:!1},tailContent:{description:"arbitrary JSX to place at the end of the subtitle/error",type:{name:"node"},required:!1},showClearButton:{description:"",type:{name:"bool"},required:!1},clearInput:{description:"",type:{name:"func"},required:!1},decoration:{description:"",type:{name:"union",value:[{name:"node"},{name:"element"}]},required:!1},disabled:{description:"",type:{name:"bool"},required:!1},search:{description:"",type:{name:"bool"},required:!1},onClick:{description:"",type:{name:"func"},required:!1},style:{description:"",type:{name:"object"},required:!1},error:{description:"",type:{name:"string"},required:!1},children:{description:"",type:{name:"union",value:[{name:"node"},{name:"arrayOf",value:{name:"node"}}]},required:!1}}};const src_Input=Input;const VALID_ICON_NAMES=__webpack_require__("./src/icons/selection.json").icons.map((icon=>icon.properties.name)),TextInput=react.forwardRef(((props,forwardedRef)=>{const{startIcon,endIcon,startContent,endContent,showClearButton,formatter,multiline,defaultValue,onChange,onBlur,maxLength,testId,type="text",error,...nativeElementProps}=props,[inputValue,setInputValue]=(0,react.useState)(defaultValue||"");function _onBlur(e){onBlur&&onBlur(e),setInputValue(formatter(e.target.value))}function _onChange(e){onChange&&onChange(e),setInputValue(e.target.value)}const charCount=((null==nativeElementProps?void 0:nativeElementProps.value)||inputValue).length,characterCounter=maxLength&&charCount>0?(0,jsx_runtime.jsxs)("div",{className:"nds-input-character-counter",children:[charCount,"/",maxLength]}):null,inputError=error||(maxLength&&inputValue.length>maxLength?"Exceeds character limits.":void 0);return(0,jsx_runtime.jsx)(src_Input,{...props,error:inputError,startIconClass:startIcon?"narmi-icon-".concat(startIcon):void 0,endIconClass:endIcon?"narmi-icon-".concat(endIcon):void 0,startContent,endContent,showClearButton:showClearButton&&inputValue,clearInput:function _onClearInput(e){_onChange(e),setInputValue("")},tailContent:characterCounter,children:multiline?(0,jsx_runtime.jsx)("div",{className:"nds-input-multiline-grid","data-textarea-value":inputValue,children:(0,jsx_runtime.jsx)("textarea",{wrap:"soft",ref:forwardedRef,value:inputValue,onChange:_onChange,onBlur:_onBlur,required:props.required,placeholder:props.label,"aria-label":props.label,"data-testid":testId,error:inputError,...nativeElementProps},"nds-text")}):(0,jsx_runtime.jsx)("input",{value:inputValue,onChange:_onChange,onBlur:_onBlur,ref:forwardedRef,type,required:props.required,"aria-label":props.label,placeholder:props.label,"data-testid":testId,error:inputError,...nativeElementProps},"nds-text")})}));TextInput.displayName="TextInput",TextInput.propTypes={label:prop_types_default().string.isRequired,onChange:prop_types_default().func,onBlur:prop_types_default().func,defaultValue:prop_types_default().string,multiline:prop_types_default().bool,formatter:prop_types_default().func,startIcon:prop_types_default().oneOf(VALID_ICON_NAMES),endIcon:prop_types_default().oneOf(VALID_ICON_NAMES),startContent:prop_types_default().node,endContent:prop_types_default().node,showClearButton:prop_types_default().bool,error:prop_types_default().string,maxLength:prop_types_default().number,testId:prop_types_default().string,type:prop_types_default().oneOf(["text","tel","number","email","password","search","time","datetime-local"]),required:prop_types_default().bool},TextInput.defaultProps={multiline:!1,formatter:x=>x,required:!0},TextInput.__docgenInfo={description:"Narmi flavored text input with floating label",methods:[],displayName:"TextInput",props:{multiline:{defaultValue:{value:"false",computed:!1},description:"When true, the input is displayed as an auto-growing textarea",type:{name:"bool"},required:!1},formatter:{defaultValue:{value:"(x) => x",computed:!1},description:"function that formats the input value on blur",type:{name:"func"},required:!1},required:{defaultValue:{value:"true",computed:!1},description:"Native element prop passed to the underlying input/textarea element. Defaults to true.",type:{name:"bool"},required:!1},label:{description:"Label used as input placeholder _and_ floating label",type:{name:"string"},required:!0},onChange:{description:"Callback invoked with event object on input change",type:{name:"func"},required:!1},onBlur:{description:"Callback invoked with event object on input blur",type:{name:"func"},required:!1},defaultValue:{description:"Sets the [uncontrolled](https://reactjs.org/docs/uncontrolled-components.html) value of the input",type:{name:"string"},required:!1},startIcon:{description:"Name of Narmi icon to place at the start of the input box",type:{name:"enum",computed:!0,value:"VALID_ICON_NAMES"},required:!1},endIcon:{description:"Name of Narmi icon to place at the end of the input box",type:{name:"enum",computed:!0,value:"VALID_ICON_NAMES"},required:!1},startContent:{description:"JSX content slot at input start for custom buttons and icons",type:{name:"node"},required:!1},endContent:{description:"JSX content slot at input end for custom buttons and icons",type:{name:"node"},required:!1},showClearButton:{description:"Display an X at the end of label that clears input and calls onChange on click.",type:{name:"bool"},required:!1},error:{description:"Text of error message to display under the input",type:{name:"string"},required:!1},maxLength:{description:"Maximum number of characters allowed in the input",type:{name:"number"},required:!1},testId:{description:"Optional value for `data-testid` attribute",type:{name:"string"},required:!1},type:{description:"",type:{name:"enum",value:[{value:'"text"',computed:!1},{value:'"tel"',computed:!1},{value:'"number"',computed:!1},{value:'"email"',computed:!1},{value:'"password"',computed:!1},{value:'"search"',computed:!1},{value:'"time"',computed:!1},{value:'"datetime-local"',computed:!1}]},required:!1}}};const src_TextInput=TextInput},"./node_modules/classcat/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{function cc(names){if("string"==typeof names||"number"==typeof names)return""+names;let out="";if(Array.isArray(names))for(let tmp,i=0;i<names.length;i++)""!==(tmp=cc(names[i]))&&(out+=(out&&" ")+tmp);else for(let k in names)names[k]&&(out+=(out&&" ")+k);return out}__webpack_require__.d(__webpack_exports__,{A:()=>cc})}}]);