"use strict";(self.webpackChunk_narmi_design_system=self.webpackChunk_narmi_design_system||[]).push([[2235],{"./src/Tooltip/index.stories.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{ControlledTooltip:()=>ControlledTooltip,Overview:()=>Overview,WithTextInput:()=>WithTextInput,__namedExportsOrder:()=>__namedExportsOrder,default:()=>index_stories});__webpack_require__("./node_modules/core-js/modules/web.dom-collections.iterator.js");var react=__webpack_require__("./node_modules/react/index.js"),prop_types=__webpack_require__("./node_modules/prop-types/index.js"),prop_types_default=__webpack_require__.n(prop_types),react_laag_esm=__webpack_require__("./node_modules/react-laag/dist/react-laag.esm.js"),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");const Tooltip=_ref=>{let{side="top",text,children,wrapperDisplay="inline-flex",maxWidth="400px",testId,isOpen}=_ref;const isControlled=!0===isOpen||!1===isOpen,[open,setOpen]=(0,react.useState)(!1),delays_open=500,delays_close=100;let activeTimer;const shouldRenderTooltip=isControlled?isOpen:open,openPopover=()=>{clearTimeout(activeTimer),activeTimer=setTimeout(setOpen,delays_open,!0)},closePopover=()=>{clearTimeout(activeTimer),activeTimer=setTimeout(setOpen,delays_close,!1)},{renderLayer,triggerProps,layerProps,arrowProps}=(0,react_laag_esm.Z4)({isOpen:shouldRenderTooltip,onOutsideClick:closePopover,onDisappear:closePopover,auto:!0,placement:"".concat(side,"-center"),preferX:"left",preferY:"top",triggerOffset:12,arrowOffset:12});return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)("div",{...triggerProps,"aria-describedby":"nds-tooltip","aria-label":text,style:{display:wrapperDisplay},onFocus:openPopover,onBlur:closePopover,onMouseEnter:openPopover,onMouseLeave:closePopover,role:"button",tabIndex:"0","data-testid":"nds-tooltip-trigger",children}),renderLayer((0,jsx_runtime.jsx)(jsx_runtime.Fragment,{children:shouldRenderTooltip&&(0,jsx_runtime.jsxs)("div",{id:"nds-tooltip",role:"tooltip",className:"nds-typography nds-tooltip elevation--middle",...layerProps,style:{maxWidth,...layerProps.style},"data-testid":testId,children:[text,(0,jsx_runtime.jsx)(react_laag_esm.i3,{...arrowProps})]})}))]})};Tooltip.propTypes={children:prop_types_default().node.isRequired,text:prop_types_default().string.isRequired,side:prop_types_default().oneOf(["top","right","bottom","left"]),wrapperDisplay:prop_types_default().oneOf(["inline-flex","inline-block","inline","block","flex"]),maxWidth:prop_types_default().number,isOpen:prop_types_default().bool,testId:prop_types_default().string},Tooltip.__docgenInfo={description:"Renders a text-only tooltip on hover or focus of a trigger.\n\nThe tooltip will position itself based on the `side` prop, but will\nautomatically reposition to avoid collisions with viewport edges.",methods:[],displayName:"Tooltip",props:{side:{defaultValue:{value:'"top"',computed:!1},description:"Sets prefferred side of the trigger the tooltip should appear",type:{name:"enum",value:[{value:'"top"',computed:!1},{value:'"right"',computed:!1},{value:'"bottom"',computed:!1},{value:'"left"',computed:!1}]},required:!1},wrapperDisplay:{defaultValue:{value:'"inline-flex"',computed:!1},description:"CSS `display` value for the element that wraps the Tooltip children",type:{name:"enum",value:[{value:'"inline-flex"',computed:!1},{value:'"inline-block"',computed:!1},{value:'"inline"',computed:!1},{value:'"block"',computed:!1},{value:'"flex"',computed:!1}]},required:!1},maxWidth:{defaultValue:{value:'"400px"',computed:!1},description:"Sets maximum width of tooltip",type:{name:"number"},required:!1},children:{description:"The root node of JSX passed into Tooltip as children will act as the tooltip trigger",type:{name:"node"},required:!0},text:{description:"Message shown inside the tooltip",type:{name:"string"},required:!0},isOpen:{description:"If isOpen is set the component becomes a controlled component",type:{name:"bool"},required:!1},testId:{description:"Optional value for `data-testid` attribute",type:{name:"string"},required:!1}}};const src_Tooltip=Tooltip;var _Overview$parameters,_Overview$parameters2,_WithTextInput$parame,_WithTextInput$parame2,_ControlledTooltip$pa,_ControlledTooltip$pa2,Button=__webpack_require__("./src/Button/index.js"),TextInput=__webpack_require__("./src/TextInput/index.js");const Template=args=>(0,jsx_runtime.jsx)("div",{style:{height:"200px",display:"flex",flexDirection:"column",justifyContent:"center",alignItems:"center"},children:(0,jsx_runtime.jsx)(src_Tooltip,{...args})});Template.displayName="Template";const Overview=Template.bind({});Overview.args={text:"I am a tooltip, which is a tool for tips",children:(0,jsx_runtime.jsx)(Button.A,{children:"Button with a tooltip"})};const WithTextInput=()=>(0,jsx_runtime.jsx)(TextInput.A,{label:"Account Number",endContent:(0,jsx_runtime.jsx)(src_Tooltip,{text:"If you don't have an account number, enter your customer ID",children:(0,jsx_runtime.jsx)("span",{className:"narmi-icon-info"})})});WithTextInput.displayName="WithTextInput",WithTextInput.parameters={docs:{description:{story:"Tooltip can be used in a TextInput by passing it as the endContent prop."}}};const ControlledTooltip=()=>{const[isOpen,setIsOpen]=(0,react.useState)(!1);return(0,jsx_runtime.jsxs)("div",{onMouseLeave:()=>{setIsOpen(!1)},children:[(0,jsx_runtime.jsx)(src_Tooltip,{isOpen,text:"Hover over anywhere else to close the tooltip.",children:"Tooltip should be over me"}),(0,jsx_runtime.jsx)(Button.A,{style:{marginLeft:8},onClick:()=>{setIsOpen((newIsOpen=>!newIsOpen))},children:"Click Me."})]})};ControlledTooltip.displayName="ControlledTooltip",ControlledTooltip.parameters={docs:{description:{story:"Tooltip can controlled to be open or closed by passing an optional isOpen property"}}};const index_stories={title:"Components/Tooltip",component:src_Tooltip};Overview.parameters={...Overview.parameters,docs:{...null===(_Overview$parameters=Overview.parameters)||void 0===_Overview$parameters?void 0:_Overview$parameters.docs,source:{originalSource:'args => <div style={{\n  height: "200px",\n  display: "flex",\n  flexDirection: "column",\n  justifyContent: "center",\n  alignItems: "center"\n}}>\n    <Tooltip {...args} />\n  </div>',...null===(_Overview$parameters2=Overview.parameters)||void 0===_Overview$parameters2||null===(_Overview$parameters2=_Overview$parameters2.docs)||void 0===_Overview$parameters2?void 0:_Overview$parameters2.source}}},WithTextInput.parameters={...WithTextInput.parameters,docs:{...null===(_WithTextInput$parame=WithTextInput.parameters)||void 0===_WithTextInput$parame?void 0:_WithTextInput$parame.docs,source:{originalSource:'() => <TextInput label="Account Number" endContent={<Tooltip text="If you don\'t have an account number, enter your customer ID">\n        <span className="narmi-icon-info"></span>\n      </Tooltip>} />',...null===(_WithTextInput$parame2=WithTextInput.parameters)||void 0===_WithTextInput$parame2||null===(_WithTextInput$parame2=_WithTextInput$parame2.docs)||void 0===_WithTextInput$parame2?void 0:_WithTextInput$parame2.source}}},ControlledTooltip.parameters={...ControlledTooltip.parameters,docs:{...null===(_ControlledTooltip$pa=ControlledTooltip.parameters)||void 0===_ControlledTooltip$pa?void 0:_ControlledTooltip$pa.docs,source:{originalSource:'() => {\n  const [isOpen, setIsOpen] = useState(false);\n  return <div onMouseLeave={() => {\n    setIsOpen(false);\n  }}>\n      <Tooltip isOpen={isOpen} text="Hover over anywhere else to close the tooltip.">\n        Tooltip should be over me\n      </Tooltip>\n      <Button style={{\n      marginLeft: 8\n    }} onClick={() => {\n      setIsOpen(newIsOpen => !newIsOpen);\n    }}>\n        Click Me.\n      </Button>\n    </div>;\n}',...null===(_ControlledTooltip$pa2=ControlledTooltip.parameters)||void 0===_ControlledTooltip$pa2||null===(_ControlledTooltip$pa2=_ControlledTooltip$pa2.docs)||void 0===_ControlledTooltip$pa2?void 0:_ControlledTooltip$pa2.source}}};const __namedExportsOrder=["Overview","WithTextInput","ControlledTooltip"];WithTextInput.__docgenInfo={description:"",methods:[],displayName:"WithTextInput"},ControlledTooltip.__docgenInfo={description:"",methods:[],displayName:"ControlledTooltip"}},"./src/Error/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});__webpack_require__("./node_modules/react/index.js");var prop_types__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/prop-types/index.js"),prop_types__WEBPACK_IMPORTED_MODULE_2___default=__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_2__),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react/jsx-runtime.js");const Error=_ref=>{let{error,marginTop="xxs"}=_ref;return error?(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)("div",{className:"nds-input-error margin--top--".concat(marginTop),children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)("div",{className:"fontSize--s margin--right--xxs narmi-icon-x-circle"}),error]}):null};Error.displayName="Error",Error.propTypes={error:prop_types__WEBPACK_IMPORTED_MODULE_2___default().string,marginTop:prop_types__WEBPACK_IMPORTED_MODULE_2___default().oneOf(["xxs","xs","s","m","l","xl","xxl","none"])},Error.__docgenInfo={description:"",methods:[],displayName:"Error",props:{marginTop:{defaultValue:{value:'"xxs"',computed:!1},description:"",type:{name:"enum",value:[{value:'"xxs"',computed:!1},{value:'"xs"',computed:!1},{value:'"s"',computed:!1},{value:'"m"',computed:!1},{value:'"l"',computed:!1},{value:'"xl"',computed:!1},{value:'"xxl"',computed:!1},{value:'"none"',computed:!1}]},required:!1},error:{description:"",type:{name:"string"},required:!1}}};const __WEBPACK_DEFAULT_EXPORT__=Error},"./src/TextInput/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{y:()=>VALID_ICON_NAMES,A:()=>src_TextInput});__webpack_require__("./node_modules/core-js/modules/web.dom-collections.iterator.js");var react=__webpack_require__("./node_modules/react/index.js"),prop_types=__webpack_require__("./node_modules/prop-types/index.js"),prop_types_default=__webpack_require__.n(prop_types),Error=__webpack_require__("./src/Error/index.js"),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");const Input=_ref=>{let{id,label,startIconClass,endIconClass,startContent,endContent,tailContent,showClearButton,clearInput,disabled,multiline=!1,decoration,error,search,onClick,style,children,...props}=_ref;const className=["nds-input",disabled?"disabled":"",props.multiline?"multiline":"",error?"error":"",search?"search":""].join(" "),endIconJsx=showClearButton?(0,jsx_runtime.jsx)("div",{className:"nds-input-icon nds-input-close narmi-icon-x",onClick:clearInput,role:"button",tabIndex:"0","aria-label":"Clear Input"}):(0,jsx_runtime.jsx)("div",{className:"nds-input-icon nds-input-icon--faded ".concat(endIconClass)});return(0,jsx_runtime.jsxs)("div",{className,onClick,style,children:[(0,jsx_runtime.jsxs)("div",{className:"nds-input-box",children:[startContent&&(0,jsx_runtime.jsx)("div",{children:startContent}),startIconClass&&(0,jsx_runtime.jsx)("div",{className:"nds-input-icon nds-input-icon--faded ".concat(startIconClass)}),(0,jsx_runtime.jsxs)("div",{className:"nds-input-column ".concat(!label||startIconClass&&!multiline?"no-label":""),children:[children,decoration,multiline?"":(0,jsx_runtime.jsx)("label",{htmlFor:id,children:label})]}),(endIconClass||showClearButton)&&endIconJsx,endContent&&(0,jsx_runtime.jsx)("div",{children:endContent})]}),(0,jsx_runtime.jsxs)("div",{className:"nds-input-subline",children:[tailContent&&(0,jsx_runtime.jsx)("div",{className:"nds-input-tail margin--top--xxs",children:tailContent}),(0,jsx_runtime.jsx)(Error.A,{error})]})]})};Input.displayName="Input",Input.propTypes={id:prop_types_default().string,label:prop_types_default().string,startIconClass:prop_types_default().string,endIconClass:prop_types_default().string,startContent:prop_types_default().node,endContent:prop_types_default().node,tailContent:prop_types_default().node,showClearButton:prop_types_default().bool,clearInput:prop_types_default().func,decoration:prop_types_default().oneOfType([prop_types_default().node,prop_types_default().element]),multiline:prop_types_default().bool,disabled:prop_types_default().bool,search:prop_types_default().bool,onClick:prop_types_default().func,style:prop_types_default().object,error:prop_types_default().string,children:prop_types_default().oneOfType([prop_types_default().node,prop_types_default().arrayOf(prop_types_default().node)])},Input.__docgenInfo={description:"PRIVATE\n\nThis component has no stories because it is only used internally by NDS.\nIn a future release, this base Input component will be merged with TextInput.",methods:[],displayName:"Input",props:{multiline:{defaultValue:{value:"false",computed:!1},description:"",type:{name:"bool"},required:!1},id:{description:"",type:{name:"string"},required:!1},label:{description:"",type:{name:"string"},required:!1},startIconClass:{description:"full `narmi-icon-<shape>` className for icon at start of input",type:{name:"string"},required:!1},endIconClass:{description:"full `narmi-icon-<shape>` className for icon at end of input",type:{name:"string"},required:!1},startContent:{description:"arbitrary JSX to place at the start of the input",type:{name:"node"},required:!1},endContent:{description:"arbitrary JSX to place at the end of the input",type:{name:"node"},required:!1},tailContent:{description:"arbitrary JSX to place at the end of the subtitle/error",type:{name:"node"},required:!1},showClearButton:{description:"",type:{name:"bool"},required:!1},clearInput:{description:"",type:{name:"func"},required:!1},decoration:{description:"",type:{name:"union",value:[{name:"node"},{name:"element"}]},required:!1},disabled:{description:"",type:{name:"bool"},required:!1},search:{description:"",type:{name:"bool"},required:!1},onClick:{description:"",type:{name:"func"},required:!1},style:{description:"",type:{name:"object"},required:!1},error:{description:"",type:{name:"string"},required:!1},children:{description:"",type:{name:"union",value:[{name:"node"},{name:"arrayOf",value:{name:"node"}}]},required:!1}}};const src_Input=Input;const VALID_ICON_NAMES=__webpack_require__("./src/icons/selection.json").icons.map((icon=>icon.properties.name)),TextInput=react.forwardRef(((props,forwardedRef)=>{const{startIcon,endIcon,startContent,endContent,showClearButton,formatter,multiline,defaultValue,onChange,onBlur,maxLength,testId,type="text",error,...nativeElementProps}=props,[inputValue,setInputValue]=(0,react.useState)(defaultValue||"");function _onBlur(e){onBlur&&onBlur(e),setInputValue(formatter(e.target.value))}function _onChange(e){onChange&&onChange(e),setInputValue(e.target.value)}const charCount=((null==nativeElementProps?void 0:nativeElementProps.value)||inputValue).length,characterCounter=maxLength&&charCount>0?(0,jsx_runtime.jsxs)("div",{className:"nds-input-character-counter",children:[charCount,"/",maxLength]}):null,inputError=error||(maxLength&&inputValue.length>maxLength?"Exceeds character limits.":void 0);return(0,jsx_runtime.jsx)(src_Input,{...props,error:inputError,startIconClass:startIcon?"narmi-icon-".concat(startIcon):void 0,endIconClass:endIcon?"narmi-icon-".concat(endIcon):void 0,startContent,endContent,showClearButton:showClearButton&&inputValue,clearInput:function _onClearInput(e){_onChange(e),setInputValue("")},tailContent:characterCounter,children:multiline?(0,jsx_runtime.jsx)("div",{className:"nds-input-multiline-grid","data-textarea-value":inputValue,children:(0,jsx_runtime.jsx)("textarea",{wrap:"soft",ref:forwardedRef,value:inputValue,onChange:_onChange,onBlur:_onBlur,required:!0,placeholder:props.label,"aria-label":props.label,"data-testid":testId,error:inputError,...nativeElementProps},"nds-text")}):(0,jsx_runtime.jsx)("input",{value:inputValue,onChange:_onChange,onBlur:_onBlur,ref:forwardedRef,type,required:!0,"aria-label":props.label,placeholder:props.label,"data-testid":testId,error:inputError,...nativeElementProps},"nds-text")})}));TextInput.displayName="TextInput",TextInput.propTypes={label:prop_types_default().string.isRequired,onChange:prop_types_default().func,onBlur:prop_types_default().func,defaultValue:prop_types_default().string,multiline:prop_types_default().bool,formatter:prop_types_default().func,startIcon:prop_types_default().oneOf(VALID_ICON_NAMES),endIcon:prop_types_default().oneOf(VALID_ICON_NAMES),startContent:prop_types_default().node,endContent:prop_types_default().node,showClearButton:prop_types_default().bool,error:prop_types_default().string,maxLength:prop_types_default().number,testId:prop_types_default().string,type:prop_types_default().oneOf(["text","tel","number","email","password","search","time","datetime-local"])},TextInput.defaultProps={multiline:!1,formatter:x=>x},TextInput.__docgenInfo={description:"Narmi flavored text input with floating label",methods:[],displayName:"TextInput",props:{multiline:{defaultValue:{value:"false",computed:!1},description:"When true, the input is displayed as an auto-growing textarea",type:{name:"bool"},required:!1},formatter:{defaultValue:{value:"(x) => x",computed:!1},description:"function that formats the input value on blur",type:{name:"func"},required:!1},label:{description:"Label used as input placeholder _and_ floating label",type:{name:"string"},required:!0},onChange:{description:"Callback invoked with event object on input change",type:{name:"func"},required:!1},onBlur:{description:"Callback invoked with event object on input blur",type:{name:"func"},required:!1},defaultValue:{description:"Sets the [uncontrolled](https://reactjs.org/docs/uncontrolled-components.html) value of the input",type:{name:"string"},required:!1},startIcon:{description:"Name of Narmi icon to place at the start of the input box",type:{name:"enum",computed:!0,value:"VALID_ICON_NAMES"},required:!1},endIcon:{description:"Name of Narmi icon to place at the end of the input box",type:{name:"enum",computed:!0,value:"VALID_ICON_NAMES"},required:!1},startContent:{description:"JSX content slot at input start for custom buttons and icons",type:{name:"node"},required:!1},endContent:{description:"JSX content slot at input end for custom buttons and icons",type:{name:"node"},required:!1},showClearButton:{description:"Display an X at the end of label that clears input and calls onChange on click. Takes precedence over endIcon when input is not empty",type:{name:"bool"},required:!1},error:{description:"Text of error message to display under the input",type:{name:"string"},required:!1},maxLength:{description:"Maximum number of characters allowed in the input",type:{name:"number"},required:!1},testId:{description:"Optional value for `data-testid` attribute",type:{name:"string"},required:!1},type:{description:"",type:{name:"enum",value:[{value:'"text"',computed:!1},{value:'"tel"',computed:!1},{value:'"number"',computed:!1},{value:'"email"',computed:!1},{value:'"password"',computed:!1},{value:'"search"',computed:!1},{value:'"time"',computed:!1},{value:'"datetime-local"',computed:!1}]},required:!1}}};const src_TextInput=TextInput},"./node_modules/classcat/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{function cc(names){if("string"==typeof names||"number"==typeof names)return""+names;let out="";if(Array.isArray(names))for(let tmp,i=0;i<names.length;i++)""!==(tmp=cc(names[i]))&&(out+=(out&&" ")+tmp);else for(let k in names)names[k]&&(out+=(out&&" ")+k);return out}__webpack_require__.d(__webpack_exports__,{A:()=>cc})}}]);