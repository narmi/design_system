"use strict";(self.webpackChunk_narmi_design_system=self.webpackChunk_narmi_design_system||[]).push([[2615],{"./node_modules/@storybook/addon-docs/dist/index.mjs":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Hl:()=>_storybook_blocks__WEBPACK_IMPORTED_MODULE_1__.Hl,Pd:()=>_storybook_blocks__WEBPACK_IMPORTED_MODULE_1__.Pd,Tn:()=>_storybook_blocks__WEBPACK_IMPORTED_MODULE_1__.Tn,W8:()=>_storybook_blocks__WEBPACK_IMPORTED_MODULE_1__.W8,gG:()=>_storybook_blocks__WEBPACK_IMPORTED_MODULE_1__.gG,hE:()=>_storybook_blocks__WEBPACK_IMPORTED_MODULE_1__.hE,om:()=>_storybook_blocks__WEBPACK_IMPORTED_MODULE_1__.om,oz:()=>_storybook_blocks__WEBPACK_IMPORTED_MODULE_1__.oz});__webpack_require__("./node_modules/@storybook/addon-docs/dist/chunk-HLWAVYOI.mjs");var _storybook_blocks__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@storybook/blocks/dist/index.mjs")},"./node_modules/@storybook/addon-docs/node_modules/@mdx-js/react/lib/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{BN:()=>MDXContext,RP:()=>useMDXComponents,gz:()=>withMDXComponents,xA:()=>MDXProvider});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");const MDXContext=react__WEBPACK_IMPORTED_MODULE_0__.createContext({});function withMDXComponents(Component){return function boundMDXComponent(props){const allComponents=useMDXComponents(props.components);return react__WEBPACK_IMPORTED_MODULE_0__.createElement(Component,{...props,allComponents})}}function useMDXComponents(components){const contextComponents=react__WEBPACK_IMPORTED_MODULE_0__.useContext(MDXContext);return react__WEBPACK_IMPORTED_MODULE_0__.useMemo((()=>"function"==typeof components?components(contextComponents):{...contextComponents,...components}),[contextComponents,components])}const emptyObject={};function MDXProvider({components,children,disableParentContext}){let allComponents;return allComponents=disableParentContext?"function"==typeof components?components({}):components||emptyObject:useMDXComponents(components),react__WEBPACK_IMPORTED_MODULE_0__.createElement(MDXContext.Provider,{value:allComponents},children)}},"./src/formatters/index.stories.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{__page:()=>__page,default:()=>index_stories});__webpack_require__("./node_modules/react/index.js");var lib=__webpack_require__("./node_modules/@storybook/addon-docs/node_modules/@mdx-js/react/lib/index.js"),dist=__webpack_require__("./node_modules/@storybook/addon-docs/dist/index.mjs");const Formatters_namespaceObject="## Functions\n\n<dl>\n<dt><a href=\"#formatDate\">formatDate(date, style)</a> ⇒ <code>String</code></dt>\n<dd><p>Wrapper for <code>Intl.DateTimeFormat</code> with options configured for Narmi applications.</p>\n</dd>\n<dt><a href=\"#formatNumber\">formatNumber(input, style)</a> ⇒ <code>String</code></dt>\n<dd><p>Wrapper for <code>Intl.NumberFormat</code> with options configured for Narmi applications.</p>\n</dd>\n</dl>\n\n<a name=\"formatDate\"></a>\n\n## formatDate(date, style) ⇒ <code>String</code>\nWrapper for `Intl.DateTimeFormat` with options configured for Narmi applications.\n\n**Kind**: global function  \n**Returns**: <code>String</code> - date string formatted for display  \n\n| Param | Type | Default | Description |\n| --- | --- | --- | --- |\n| date | <code>Date</code> |  | native date object |\n| style | <code>String</code> | <code>short</code> | formatting style (`short` or `long`) |\n\n**Example**  \n```js\nimport { formatDate } from '@narmi/design_system';\n\nformatDate(new Date('July 4, 2022'), 'short'); // '7/4/22'\nformatDate(new Date('7/4/2022'), 'long');      // 'July 4, 2022'\n```\n<a name=\"formatNumber\"></a>\n\n## formatNumber(input, style) ⇒ <code>String</code>\nWrapper for `Intl.NumberFormat` with options configured for Narmi applications.\n\n**Kind**: global function  \n**Returns**: <code>String</code> - number string formatted for display  \n\n| Param | Type | Default | Description |\n| --- | --- | --- | --- |\n| input | <code>String</code> \\| <code>Number</code> |  | string or number to format into a number string |\n| style | <code>String</code> | <code>currency</code> | format style (`currency` or `percent`) |\n\n**Example**  \n```js\nimport { formatNumber } from '@narmi/design_system';\n\nformatNumber(1234.56, 'currency'); // '$1,234.56'\nformatNumber(34.4, 'currency');    // '$34.40'\nformatNumber(-12, 'currency');     // '-$12.00'\nformatNumber('0.0342', 'percent'); // '3.42%'\nformatNumber(0.0023, 'percent');   // '0.23%'\nformatNumber(0.215555, 'percent'); // '21.56%'\n```\n";var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");function _createMdxContent(props){return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(dist.W8,{title:"Utilities/Formatters"}),"\n",(0,jsx_runtime.jsx)(dist.oz,{children:Formatters_namespaceObject})]})}const __page=()=>{throw new Error("Docs-only story")};__page.parameters={docsOnly:!0};const componentMeta={title:"Utilities/Formatters",tags:["stories-mdx"],includeStories:["__page"]};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs={...componentMeta.parameters.docs||{},page:function MDXContent(props={}){const{wrapper:MDXLayout}=Object.assign({},(0,lib.RP)(),props.components);return MDXLayout?(0,jsx_runtime.jsx)(MDXLayout,{...props,children:(0,jsx_runtime.jsx)(_createMdxContent,{...props})}):_createMdxContent()}};const index_stories=componentMeta}}]);