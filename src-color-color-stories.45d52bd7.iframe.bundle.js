"use strict";(self.webpackChunk_narmi_design_system=self.webpackChunk_narmi_design_system||[]).push([[395],{"./tokens/src/color/color.stories.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Background:()=>Background,Base:()=>Base,System:()=>System,Theme:()=>Theme,Transparency:()=>Transparency,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),dist_tokens_js_manifest__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./dist/tokens/js/manifest.js"),helpers_TokenTable__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./.storybook/helpers/TokenTable.jsx");const __WEBPACK_DEFAULT_EXPORT__={title:"Design Tokens/Color"},Base=(args=>react__WEBPACK_IMPORTED_MODULE_0__.createElement(helpers_TokenTable__WEBPACK_IMPORTED_MODULE_2__.Ay,args)).bind({});Base.args={previewType:"color",rows:(0,helpers_TokenTable__WEBPACK_IMPORTED_MODULE_2__.ee)(dist_tokens_js_manifest__WEBPACK_IMPORTED_MODULE_1__.color,"narmi").filter((({name})=>!new RegExp(/[0-9]/).test(name)))};const Theme=()=>react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment,null,react__WEBPACK_IMPORTED_MODULE_0__.createElement("h2",null,"Theme Colors"),react__WEBPACK_IMPORTED_MODULE_0__.createElement(helpers_TokenTable__WEBPACK_IMPORTED_MODULE_2__.Ay,{previewType:"color",rows:(0,helpers_TokenTable__WEBPACK_IMPORTED_MODULE_2__.ee)(dist_tokens_js_manifest__WEBPACK_IMPORTED_MODULE_1__.color,"theme")})),Background=()=>react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment,null,react__WEBPACK_IMPORTED_MODULE_0__.createElement("h2",null,"Background Colors"),react__WEBPACK_IMPORTED_MODULE_0__.createElement(helpers_TokenTable__WEBPACK_IMPORTED_MODULE_2__.Ay,{previewType:"color",rows:(0,helpers_TokenTable__WEBPACK_IMPORTED_MODULE_2__.ee)(dist_tokens_js_manifest__WEBPACK_IMPORTED_MODULE_1__.color,"background")})),System=()=>react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment,null,react__WEBPACK_IMPORTED_MODULE_0__.createElement("h2",null,"System Colors"),react__WEBPACK_IMPORTED_MODULE_0__.createElement(helpers_TokenTable__WEBPACK_IMPORTED_MODULE_2__.Ay,{previewType:"color",rows:(0,helpers_TokenTable__WEBPACK_IMPORTED_MODULE_2__.ee)(dist_tokens_js_manifest__WEBPACK_IMPORTED_MODULE_1__.color,"system")})),Transparency=()=>react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment,null,react__WEBPACK_IMPORTED_MODULE_0__.createElement("h2",null,"Alpha Values"),react__WEBPACK_IMPORTED_MODULE_0__.createElement(helpers_TokenTable__WEBPACK_IMPORTED_MODULE_2__.Ay,{rows:(0,helpers_TokenTable__WEBPACK_IMPORTED_MODULE_2__.ee)(dist_tokens_js_manifest__WEBPACK_IMPORTED_MODULE_1__.color,"alpha")})),__namedExportsOrder=["Base","Theme","Background","System","Transparency"];Base.parameters={...Base.parameters,docs:{...Base.parameters?.docs,source:{originalSource:"args => <TokenTable {...args} />",...Base.parameters?.docs?.source}}},Theme.parameters={...Theme.parameters,docs:{...Theme.parameters?.docs,source:{originalSource:'() => <>\n    <h2>Theme Colors</h2>\n    <TokenTable previewType="color" rows={toTokenRows(color, "theme")} />\n  </>',...Theme.parameters?.docs?.source}}},Background.parameters={...Background.parameters,docs:{...Background.parameters?.docs,source:{originalSource:'() => <>\n    <h2>Background Colors</h2>\n    <TokenTable previewType="color" rows={toTokenRows(color, "background")} />\n  </>',...Background.parameters?.docs?.source}}},System.parameters={...System.parameters,docs:{...System.parameters?.docs,source:{originalSource:'() => <>\n    <h2>System Colors</h2>\n    <TokenTable previewType="color" rows={toTokenRows(color, "system")} />\n  </>',...System.parameters?.docs?.source}}},Transparency.parameters={...Transparency.parameters,docs:{...Transparency.parameters?.docs,source:{originalSource:'() => <>\n    <h2>Alpha Values</h2>\n    <TokenTable rows={toTokenRows(color, "alpha")} />\n  </>',...Transparency.parameters?.docs?.source}}}}}]);