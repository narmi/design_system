/**
* Sass helpers
* Global mixins, placeholders, functions, and vars
*/

/**
* Breakpoints are mobile first, meaning default styles are for mobile-sized
* screens and these breakpoints are for targeting larger viewports.
*/
$breakpoints: (
  // larger than most phones
  "s": 480px,
  // larger than most tablets
  "m": 768px,
  // larger than some laptop screens
  "l": 1280px,
  // larger than many desktop screens
  "xl": 1440px
);

/**
* Mobile first style media query helper.
* Styles wrapped in this mixin will apply to screens
* of the given breakpoint size _and larger_.
*
* @include atMediaUp(m) { styles for M size or larger }
* @include atMediaUp(l, true) to include a min-height as well
*/
@mixin atMediaUp($breakpointName, $includeHeight: false) {
  $minWidth: map.get($breakpoints, $breakpointName);
  @if $includeHeight {
    @media only screen and (min-width: #{$minWidth}) and (min-height: #{$minWidth}) {
      @content;
    }
  } @else {
    @media only screen and (min-width: #{$minWidth}) {
      @content;
    }
  }
}

/**
* Placeholder: Visually hide the selected element
*
* selector {
*   @extend %a11y-visually-hide;
* }
*/
%a11y-visually-hide {
  clip: rect(0 0 0 0);
  clip-path: inset(50%);
  height: 1px;
  overflow: hidden;
  position: absolute;
  white-space: nowrap;
  width: 1px;
}

/**
* Convert px values to rem. Use this when defining a value that
* needs to scale with font size (e.g. checkbox offsets)
*
* ⚠️ NOTE: The base size is always assumed to be 16px
*
* @usage
* ```diff
* -transform: translateY(18px);
* +transform: translateY(rem(18px));
* ```
*/
@function rem($pxValue) {
  @return #{$pxValue / 16px * 1rem};
}
